
Task_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000fbc  00001050  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fbc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001fb  0080010c  0080010c  0000105c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000105c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  000010f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000829  00000000  00000000  00001190  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000349  00000000  00000000  000019b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000033d  00000000  00000000  00001d02  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000019c  00000000  00000000  00002040  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002fd  00000000  00000000  000021dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005c2  00000000  00000000  000024d9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00002a9b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 24 01 	jmp	0x248	; 0x248 <__ctors_end>
   4:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
   8:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
   c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  10:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  14:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  18:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  1c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  20:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  24:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  28:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  2c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  30:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  34:	0c 94 43 01 	jmp	0x286	; 0x286 <__vector_13>
  38:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  3c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  40:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  44:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  48:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  4c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  50:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  54:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  58:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  5c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  60:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  64:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>

00000068 <CHARSET>:
  68:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
  78:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
  88:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
  98:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
  a8:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
  b8:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
  c8:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
  d8:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
  e8:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
  f8:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
 108:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
 118:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
 128:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
 138:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
 148:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
 158:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
 168:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
 178:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
 188:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
 198:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
 1a8:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
 1b8:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
 1c8:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
 1d8:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
 1e8:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
 1f8:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
 208:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
 218:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
 228:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
 238:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000248 <__ctors_end>:
 248:	11 24       	eor	r1, r1
 24a:	1f be       	out	0x3f, r1	; 63
 24c:	cf ef       	ldi	r28, 0xFF	; 255
 24e:	d8 e0       	ldi	r29, 0x08	; 8
 250:	de bf       	out	0x3e, r29	; 62
 252:	cd bf       	out	0x3d, r28	; 61

00000254 <__do_copy_data>:
 254:	11 e0       	ldi	r17, 0x01	; 1
 256:	a0 e0       	ldi	r26, 0x00	; 0
 258:	b1 e0       	ldi	r27, 0x01	; 1
 25a:	ec eb       	ldi	r30, 0xBC	; 188
 25c:	ff e0       	ldi	r31, 0x0F	; 15
 25e:	02 c0       	rjmp	.+4      	; 0x264 <__do_copy_data+0x10>
 260:	05 90       	lpm	r0, Z+
 262:	0d 92       	st	X+, r0
 264:	ac 30       	cpi	r26, 0x0C	; 12
 266:	b1 07       	cpc	r27, r17
 268:	d9 f7       	brne	.-10     	; 0x260 <__do_copy_data+0xc>

0000026a <__do_clear_bss>:
 26a:	23 e0       	ldi	r18, 0x03	; 3
 26c:	ac e0       	ldi	r26, 0x0C	; 12
 26e:	b1 e0       	ldi	r27, 0x01	; 1
 270:	01 c0       	rjmp	.+2      	; 0x274 <.do_clear_bss_start>

00000272 <.do_clear_bss_loop>:
 272:	1d 92       	st	X+, r1

00000274 <.do_clear_bss_start>:
 274:	a7 30       	cpi	r26, 0x07	; 7
 276:	b2 07       	cpc	r27, r18
 278:	e1 f7       	brne	.-8      	; 0x272 <.do_clear_bss_loop>
 27a:	0e 94 85 01 	call	0x30a	; 0x30a <main>
 27e:	0c 94 dc 07 	jmp	0xfb8	; 0xfb8 <_exit>

00000282 <__bad_interrupt>:
 282:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000286 <__vector_13>:

volatile char ov_flag = 0;
int read_temp();

ISR(TIMER1_OVF_vect)
{
 286:	1f 92       	push	r1
 288:	0f 92       	push	r0
 28a:	0f b6       	in	r0, 0x3f	; 63
 28c:	0f 92       	push	r0
 28e:	11 24       	eor	r1, r1
 290:	8f 93       	push	r24
 292:	9f 93       	push	r25
	ov_flag = 1;
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	80 93 0c 01 	sts	0x010C, r24
	TCNT1 = 57723;
 29a:	8b e7       	ldi	r24, 0x7B	; 123
 29c:	91 ee       	ldi	r25, 0xE1	; 225
 29e:	90 93 85 00 	sts	0x0085, r25
 2a2:	80 93 84 00 	sts	0x0084, r24
}
 2a6:	9f 91       	pop	r25
 2a8:	8f 91       	pop	r24
 2aa:	0f 90       	pop	r0
 2ac:	0f be       	out	0x3f, r0	; 63
 2ae:	0f 90       	pop	r0
 2b0:	1f 90       	pop	r1
 2b2:	18 95       	reti

000002b4 <read_temp>:
	}
}

int read_temp()
{
	ADCSRA = 0x87;
 2b4:	ea e7       	ldi	r30, 0x7A	; 122
 2b6:	f0 e0       	ldi	r31, 0x00	; 0
 2b8:	87 e8       	ldi	r24, 0x87	; 135
 2ba:	80 83       	st	Z, r24
	ADMUX = (1<<REFS1) | (1<<REFS0); //Use ADC0
 2bc:	80 ec       	ldi	r24, 0xC0	; 192
 2be:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA |= (1<<ADSC);
 2c2:	80 81       	ld	r24, Z
 2c4:	80 64       	ori	r24, 0x40	; 64
 2c6:	80 83       	st	Z, r24
	while((ADCSRA & (1<<ADIF))==0);
 2c8:	80 81       	ld	r24, Z
 2ca:	84 ff       	sbrs	r24, 4
 2cc:	fd cf       	rjmp	.-6      	; 0x2c8 <read_temp+0x14>
	double t = ADC;
 2ce:	60 91 78 00 	lds	r22, 0x0078
 2d2:	70 91 79 00 	lds	r23, 0x0079
 2d6:	80 e0       	ldi	r24, 0x00	; 0
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
	t *= 99;
 2de:	20 e0       	ldi	r18, 0x00	; 0
 2e0:	30 e0       	ldi	r19, 0x00	; 0
 2e2:	46 ec       	ldi	r20, 0xC6	; 198
 2e4:	52 e4       	ldi	r21, 0x42	; 66
 2e6:	0e 94 8b 04 	call	0x916	; 0x916 <__mulsf3>
	t /= 512;
 2ea:	20 e0       	ldi	r18, 0x00	; 0
 2ec:	30 e0       	ldi	r19, 0x00	; 0
 2ee:	40 e0       	ldi	r20, 0x00	; 0
 2f0:	5b e3       	ldi	r21, 0x3B	; 59
 2f2:	0e 94 8b 04 	call	0x916	; 0x916 <__mulsf3>
	t -= 58;
 2f6:	20 e0       	ldi	r18, 0x00	; 0
 2f8:	30 e0       	ldi	r19, 0x00	; 0
 2fa:	48 e6       	ldi	r20, 0x68	; 104
 2fc:	52 e4       	ldi	r21, 0x42	; 66
 2fe:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <__subsf3>
	return (int)t;
 302:	0e 94 c7 03 	call	0x78e	; 0x78e <__fixsfsi>
 306:	cb 01       	movw	r24, r22
 308:	08 95       	ret

0000030a <main>:
	ov_flag = 1;
	TCNT1 = 57723;
}

int main(void)
{
 30a:	cf 93       	push	r28
 30c:	df 93       	push	r29
 30e:	cd b7       	in	r28, 0x3d	; 61
 310:	de b7       	in	r29, 0x3e	; 62
 312:	64 97       	sbiw	r28, 0x14	; 20
 314:	0f b6       	in	r0, 0x3f	; 63
 316:	f8 94       	cli
 318:	de bf       	out	0x3e, r29	; 62
 31a:	0f be       	out	0x3f, r0	; 63
 31c:	cd bf       	out	0x3d, r28	; 61
	char buffer[20];
    nokia_lcd_init();
 31e:	0e 94 f5 01 	call	0x3ea	; 0x3ea <nokia_lcd_init>
    nokia_lcd_clear();
 322:	0e 94 39 02 	call	0x472	; 0x472 <nokia_lcd_clear>
	TCNT1 = 57723;
 326:	8b e7       	ldi	r24, 0x7B	; 123
 328:	91 ee       	ldi	r25, 0xE1	; 225
 32a:	90 93 85 00 	sts	0x0085, r25
 32e:	80 93 84 00 	sts	0x0084, r24
	TCCR1B = (1<<CS12) | (1<<CS10);
 332:	85 e0       	ldi	r24, 0x05	; 5
 334:	80 93 81 00 	sts	0x0081, r24
	TIMSK1 = (1<<TOIE1);
 338:	81 e0       	ldi	r24, 0x01	; 1
 33a:	80 93 6f 00 	sts	0x006F, r24
	int t = 0;
	sei();
 33e:	78 94       	sei
		{
			nokia_lcd_clear();
			ov_flag = 0;
			nokia_lcd_write_string("Temp: ", 2);
			nokia_lcd_set_cursor(0,16);
			sprintf(buffer, "%dF", t);
 340:	0f 2e       	mov	r0, r31
 342:	f7 e0       	ldi	r31, 0x07	; 7
 344:	cf 2e       	mov	r12, r31
 346:	f1 e0       	ldi	r31, 0x01	; 1
 348:	df 2e       	mov	r13, r31
 34a:	f0 2d       	mov	r31, r0
 34c:	ce 01       	movw	r24, r28
 34e:	01 96       	adiw	r24, 0x01	; 1
 350:	7c 01       	movw	r14, r24
	int t = 0;
	sei();
	
	while (1)
	{
		t = read_temp();
 352:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <read_temp>
 356:	18 2f       	mov	r17, r24
 358:	09 2f       	mov	r16, r25
		if(ov_flag == 1)
 35a:	20 91 0c 01 	lds	r18, 0x010C
 35e:	21 30       	cpi	r18, 0x01	; 1
 360:	c1 f7       	brne	.-16     	; 0x352 <main+0x48>
		{
			nokia_lcd_clear();
 362:	0e 94 39 02 	call	0x472	; 0x472 <nokia_lcd_clear>
			ov_flag = 0;
 366:	10 92 0c 01 	sts	0x010C, r1
			nokia_lcd_write_string("Temp: ", 2);
 36a:	62 e0       	ldi	r22, 0x02	; 2
 36c:	80 e0       	ldi	r24, 0x00	; 0
 36e:	91 e0       	ldi	r25, 0x01	; 1
 370:	0e 94 28 03 	call	0x650	; 0x650 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,16);
 374:	60 e1       	ldi	r22, 0x10	; 16
 376:	80 e0       	ldi	r24, 0x00	; 0
 378:	0e 94 3b 03 	call	0x676	; 0x676 <nokia_lcd_set_cursor>
			sprintf(buffer, "%dF", t);
 37c:	0f 93       	push	r16
 37e:	1f 93       	push	r17
 380:	df 92       	push	r13
 382:	cf 92       	push	r12
 384:	ff 92       	push	r15
 386:	ef 92       	push	r14
 388:	0e 94 04 05 	call	0xa08	; 0xa08 <sprintf>
			nokia_lcd_write_string(buffer, 2);
 38c:	62 e0       	ldi	r22, 0x02	; 2
 38e:	c7 01       	movw	r24, r14
 390:	0e 94 28 03 	call	0x650	; 0x650 <nokia_lcd_write_string>
			nokia_lcd_render();
 394:	0e 94 40 03 	call	0x680	; 0x680 <nokia_lcd_render>
 398:	0f 90       	pop	r0
 39a:	0f 90       	pop	r0
 39c:	0f 90       	pop	r0
 39e:	0f 90       	pop	r0
 3a0:	0f 90       	pop	r0
 3a2:	0f 90       	pop	r0
 3a4:	d6 cf       	rjmp	.-84     	; 0x352 <main+0x48>

000003a6 <write>:
 */
static void write(uint8_t bytes, uint8_t is_data)
{
	register uint8_t i;
	/* Enable controller */
	PORT_LCD &= ~(1 << LCD_SCE);
 3a6:	29 98       	cbi	0x05, 1	; 5

	/* We are sending data */
	if (is_data)
 3a8:	66 23       	and	r22, r22
 3aa:	11 f0       	breq	.+4      	; 0x3b0 <write+0xa>
		PORT_LCD |= (1 << LCD_DC);
 3ac:	2b 9a       	sbi	0x05, 3	; 5
 3ae:	15 c0       	rjmp	.+42     	; 0x3da <write+0x34>
	/* We are sending commands */
	else
		PORT_LCD &= ~(1 << LCD_DC);
 3b0:	2b 98       	cbi	0x05, 3	; 5
 3b2:	13 c0       	rjmp	.+38     	; 0x3da <write+0x34>

	/* Send bytes */
	for (i = 0; i < 8; i++) {
		/* Set data pin to byte state */
		if ((bytes >> (7-i)) & 0x01)
 3b4:	ac 01       	movw	r20, r24
 3b6:	02 2e       	mov	r0, r18
 3b8:	02 c0       	rjmp	.+4      	; 0x3be <write+0x18>
 3ba:	55 95       	asr	r21
 3bc:	47 95       	ror	r20
 3be:	0a 94       	dec	r0
 3c0:	e2 f7       	brpl	.-8      	; 0x3ba <write+0x14>
 3c2:	40 ff       	sbrs	r20, 0
 3c4:	02 c0       	rjmp	.+4      	; 0x3ca <write+0x24>
			PORT_LCD |= (1 << LCD_DIN);
 3c6:	2c 9a       	sbi	0x05, 4	; 5
 3c8:	01 c0       	rjmp	.+2      	; 0x3cc <write+0x26>
		else
			PORT_LCD &= ~(1 << LCD_DIN);
 3ca:	2c 98       	cbi	0x05, 4	; 5

		/* Blink clock */
		PORT_LCD |= (1 << LCD_CLK);
 3cc:	2d 9a       	sbi	0x05, 5	; 5
		PORT_LCD &= ~(1 << LCD_CLK);
 3ce:	2d 98       	cbi	0x05, 5	; 5
 3d0:	21 50       	subi	r18, 0x01	; 1
 3d2:	31 09       	sbc	r19, r1
 3d4:	78 f7       	brcc	.-34     	; 0x3b4 <write+0xe>
	}

	/* Disable controller */
	PORT_LCD |= (1 << LCD_SCE);
 3d6:	29 9a       	sbi	0x05, 1	; 5
 3d8:	08 95       	ret
 * Sending data to LCD
 * @bytes: data
 * @is_data: transfer mode: 1 - data; 0 - command;
 */
static void write(uint8_t bytes, uint8_t is_data)
{
 3da:	27 e0       	ldi	r18, 0x07	; 7
 3dc:	30 e0       	ldi	r19, 0x00	; 0
		PORT_LCD &= ~(1 << LCD_DC);

	/* Send bytes */
	for (i = 0; i < 8; i++) {
		/* Set data pin to byte state */
		if ((bytes >> (7-i)) & 0x01)
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	e9 cf       	rjmp	.-46     	; 0x3b4 <write+0xe>

000003e2 <write_cmd>:
	PORT_LCD |= (1 << LCD_SCE);
}

static void write_cmd(uint8_t cmd)
{
	write(cmd, 0);
 3e2:	60 e0       	ldi	r22, 0x00	; 0
 3e4:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write>
 3e8:	08 95       	ret

000003ea <nokia_lcd_init>:
/*
 * Public functions
 */

void nokia_lcd_init(void)
{
 3ea:	cf 93       	push	r28
 3ec:	df 93       	push	r29
	register unsigned i;
	/* Set pins as output */
	DDR_LCD |= (1 << LCD_SCE);
 3ee:	21 9a       	sbi	0x04, 1	; 4
	DDR_LCD |= (1 << LCD_RST);
 3f0:	22 9a       	sbi	0x04, 2	; 4
	DDR_LCD |= (1 << LCD_DC);
 3f2:	23 9a       	sbi	0x04, 3	; 4
	DDR_LCD |= (1 << LCD_DIN);
 3f4:	24 9a       	sbi	0x04, 4	; 4
	DDR_LCD |= (1 << LCD_CLK);
 3f6:	25 9a       	sbi	0x04, 5	; 4

	/* Reset display */
	PORT_LCD |= (1 << LCD_RST);
 3f8:	2a 9a       	sbi	0x05, 2	; 5
	PORT_LCD |= (1 << LCD_SCE);
 3fa:	29 9a       	sbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3fc:	8f e1       	ldi	r24, 0x1F	; 31
 3fe:	9e e4       	ldi	r25, 0x4E	; 78
 400:	01 97       	sbiw	r24, 0x01	; 1
 402:	f1 f7       	brne	.-4      	; 0x400 <nokia_lcd_init+0x16>
 404:	00 c0       	rjmp	.+0      	; 0x406 <nokia_lcd_init+0x1c>
 406:	00 00       	nop
	_delay_ms(10);
	PORT_LCD &= ~(1 << LCD_RST);
 408:	2a 98       	cbi	0x05, 2	; 5
 40a:	9f e7       	ldi	r25, 0x7F	; 127
 40c:	25 eb       	ldi	r18, 0xB5	; 181
 40e:	81 e0       	ldi	r24, 0x01	; 1
 410:	91 50       	subi	r25, 0x01	; 1
 412:	20 40       	sbci	r18, 0x00	; 0
 414:	80 40       	sbci	r24, 0x00	; 0
 416:	e1 f7       	brne	.-8      	; 0x410 <nokia_lcd_init+0x26>
 418:	00 c0       	rjmp	.+0      	; 0x41a <nokia_lcd_init+0x30>
 41a:	00 00       	nop
	_delay_ms(70);
	PORT_LCD |= (1 << LCD_RST);
 41c:	2a 9a       	sbi	0x05, 2	; 5

	/*
	 * Initialize display
	 */
	/* Enable controller */
	PORT_LCD &= ~(1 << LCD_SCE);
 41e:	29 98       	cbi	0x05, 1	; 5
	/* -LCD Extended Commands mode- */
	write_cmd(0x21);
 420:	81 e2       	ldi	r24, 0x21	; 33
 422:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <write_cmd>
	/* LCD bias mode 1:48 */
	write_cmd(0x13);
 426:	83 e1       	ldi	r24, 0x13	; 19
 428:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <write_cmd>
	/* Set temperature coefficient */
	write_cmd(0x06);
 42c:	86 e0       	ldi	r24, 0x06	; 6
 42e:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <write_cmd>
	/* Default VOP (3.06 + 66 * 0.06 = 7V) */
	write_cmd(0xC2);
 432:	82 ec       	ldi	r24, 0xC2	; 194
 434:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <write_cmd>
	/* Standard Commands mode, powered down */
	write_cmd(0x20);
 438:	80 e2       	ldi	r24, 0x20	; 32
 43a:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <write_cmd>
	/* LCD in normal mode */
	write_cmd(0x09);
 43e:	89 e0       	ldi	r24, 0x09	; 9
 440:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <write_cmd>

	write_cmd(0x80);// Clear LCD RAM 
 444:	80 e8       	ldi	r24, 0x80	; 128
 446:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <write_cmd>
	write_cmd(0x40);
 44a:	80 e4       	ldi	r24, 0x40	; 64
 44c:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <write_cmd>
 450:	c8 ef       	ldi	r28, 0xF8	; 248
 452:	d1 e0       	ldi	r29, 0x01	; 1
	write(cmd, 0);
}

static void write_data(uint8_t data)
{
	write(data, 1);
 454:	61 e0       	ldi	r22, 0x01	; 1
 456:	80 e0       	ldi	r24, 0x00	; 0
 458:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write>
 45c:	21 97       	sbiw	r28, 0x01	; 1
	/* LCD in normal mode */
	write_cmd(0x09);

	write_cmd(0x80);// Clear LCD RAM 
	write_cmd(0x40);
	for (i = 0; i < 504; i++)
 45e:	d1 f7       	brne	.-12     	; 0x454 <nokia_lcd_init+0x6a>
		write_data(0x00);

	/* Activate LCD */
	write_cmd(0x08);
 460:	88 e0       	ldi	r24, 0x08	; 8
 462:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <write_cmd>
	write_cmd(0x0C);
 466:	8c e0       	ldi	r24, 0x0C	; 12
 468:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <write_cmd>
}
 46c:	df 91       	pop	r29
 46e:	cf 91       	pop	r28
 470:	08 95       	ret

00000472 <nokia_lcd_clear>:

void nokia_lcd_clear(void)
{
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
 472:	80 e8       	ldi	r24, 0x80	; 128
 474:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <write_cmd>
	write_cmd(0x40);
 478:	80 e4       	ldi	r24, 0x40	; 64
 47a:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <write_cmd>
	/*Cursor too */
	nokia_lcd.cursor_x = 0;
 47e:	10 92 05 03 	sts	0x0305, r1
	nokia_lcd.cursor_y = 0;
 482:	10 92 06 03 	sts	0x0306, r1
 486:	ed e0       	ldi	r30, 0x0D	; 13
 488:	f1 e0       	ldi	r31, 0x01	; 1
 48a:	85 e0       	ldi	r24, 0x05	; 5
 48c:	93 e0       	ldi	r25, 0x03	; 3
	/* Clear everything (504 bytes = 84cols * 48 rows / 8 bits) */
	for(i = 0;i < 504; i++)
		nokia_lcd.screen[i] = 0x00;
 48e:	11 92       	st	Z+, r1
	write_cmd(0x40);
	/*Cursor too */
	nokia_lcd.cursor_x = 0;
	nokia_lcd.cursor_y = 0;
	/* Clear everything (504 bytes = 84cols * 48 rows / 8 bits) */
	for(i = 0;i < 504; i++)
 490:	e8 17       	cp	r30, r24
 492:	f9 07       	cpc	r31, r25
 494:	e1 f7       	brne	.-8      	; 0x48e <nokia_lcd_clear+0x1c>
		nokia_lcd.screen[i] = 0x00;
}
 496:	08 95       	ret

00000498 <nokia_lcd_set_pixel>:
	write_cmd(on ? 0x20 : 0x24);
}

void nokia_lcd_set_pixel(uint8_t x, uint8_t y, uint8_t value)
{
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
 498:	26 2f       	mov	r18, r22
 49a:	26 95       	lsr	r18
 49c:	26 95       	lsr	r18
 49e:	26 95       	lsr	r18
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	34 e5       	ldi	r19, 0x54	; 84
 4a4:	23 9f       	mul	r18, r19
 4a6:	80 0d       	add	r24, r0
 4a8:	91 1d       	adc	r25, r1
 4aa:	11 24       	eor	r1, r1
	if (value)
 4ac:	44 23       	and	r20, r20
 4ae:	79 f0       	breq	.+30     	; 0x4ce <nokia_lcd_set_pixel+0x36>
		*byte |= (1 << (y % 8));
 4b0:	fc 01       	movw	r30, r24
 4b2:	e3 5f       	subi	r30, 0xF3	; 243
 4b4:	fe 4f       	sbci	r31, 0xFE	; 254
 4b6:	67 70       	andi	r22, 0x07	; 7
 4b8:	81 e0       	ldi	r24, 0x01	; 1
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	02 c0       	rjmp	.+4      	; 0x4c2 <nokia_lcd_set_pixel+0x2a>
 4be:	88 0f       	add	r24, r24
 4c0:	99 1f       	adc	r25, r25
 4c2:	6a 95       	dec	r22
 4c4:	e2 f7       	brpl	.-8      	; 0x4be <nokia_lcd_set_pixel+0x26>
 4c6:	90 81       	ld	r25, Z
 4c8:	89 2b       	or	r24, r25
 4ca:	80 83       	st	Z, r24
 4cc:	08 95       	ret
	else
		*byte &= ~(1 << (y %8 ));
 4ce:	fc 01       	movw	r30, r24
 4d0:	e3 5f       	subi	r30, 0xF3	; 243
 4d2:	fe 4f       	sbci	r31, 0xFE	; 254
 4d4:	67 70       	andi	r22, 0x07	; 7
 4d6:	81 e0       	ldi	r24, 0x01	; 1
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	02 c0       	rjmp	.+4      	; 0x4e0 <nokia_lcd_set_pixel+0x48>
 4dc:	88 0f       	add	r24, r24
 4de:	99 1f       	adc	r25, r25
 4e0:	6a 95       	dec	r22
 4e2:	e2 f7       	brpl	.-8      	; 0x4dc <nokia_lcd_set_pixel+0x44>
 4e4:	80 95       	com	r24
 4e6:	90 81       	ld	r25, Z
 4e8:	89 23       	and	r24, r25
 4ea:	80 83       	st	Z, r24
 4ec:	08 95       	ret

000004ee <nokia_lcd_write_char>:
}

void nokia_lcd_write_char(char code, uint8_t scale)
{
 4ee:	4f 92       	push	r4
 4f0:	5f 92       	push	r5
 4f2:	6f 92       	push	r6
 4f4:	7f 92       	push	r7
 4f6:	8f 92       	push	r8
 4f8:	9f 92       	push	r9
 4fa:	af 92       	push	r10
 4fc:	bf 92       	push	r11
 4fe:	cf 92       	push	r12
 500:	df 92       	push	r13
 502:	ef 92       	push	r14
 504:	ff 92       	push	r15
 506:	0f 93       	push	r16
 508:	1f 93       	push	r17
 50a:	cf 93       	push	r28
 50c:	df 93       	push	r29
 50e:	56 2e       	mov	r5, r22
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
 510:	26 2f       	mov	r18, r22
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	49 01       	movw	r8, r18
 516:	88 0c       	add	r8, r8
 518:	99 1c       	adc	r9, r9
 51a:	88 0c       	add	r8, r8
 51c:	99 1c       	adc	r9, r9
 51e:	82 0e       	add	r8, r18
 520:	93 1e       	adc	r9, r19
 522:	18 14       	cp	r1, r8
 524:	19 04       	cpc	r1, r9
 526:	0c f0       	brlt	.+2      	; 0x52a <nokia_lcd_write_char+0x3c>
 528:	5e c0       	rjmp	.+188    	; 0x5e6 <nokia_lcd_write_char+0xf8>
		for (y = 0; y < 7*scale; y++)
 52a:	89 01       	movw	r16, r18
 52c:	00 0f       	add	r16, r16
 52e:	11 1f       	adc	r17, r17
 530:	00 0f       	add	r16, r16
 532:	11 1f       	adc	r17, r17
 534:	00 0f       	add	r16, r16
 536:	11 1f       	adc	r17, r17
 538:	02 1b       	sub	r16, r18
 53a:	13 0b       	sbc	r17, r19
 53c:	61 2c       	mov	r6, r1
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
 53e:	a8 2e       	mov	r10, r24
 540:	b1 2c       	mov	r11, r1
 542:	c5 01       	movw	r24, r10
 544:	80 97       	sbiw	r24, 0x20	; 32
 546:	5c 01       	movw	r10, r24
 548:	aa 0c       	add	r10, r10
 54a:	bb 1c       	adc	r11, r11
 54c:	aa 0c       	add	r10, r10
 54e:	bb 1c       	adc	r11, r11
 550:	a8 0e       	add	r10, r24
 552:	b9 1e       	adc	r11, r25
 554:	41 2c       	mov	r4, r1
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
 556:	0f 2e       	mov	r0, r31
 558:	f6 e0       	ldi	r31, 0x06	; 6
 55a:	cf 2e       	mov	r12, r31
 55c:	f3 e0       	ldi	r31, 0x03	; 3
 55e:	df 2e       	mov	r13, r31
 560:	f0 2d       	mov	r31, r0
 562:	0f 2e       	mov	r0, r31
 564:	f5 e0       	ldi	r31, 0x05	; 5
 566:	ef 2e       	mov	r14, r31
 568:	f3 e0       	ldi	r31, 0x03	; 3
 56a:	ff 2e       	mov	r15, r31
 56c:	f0 2d       	mov	r31, r0
 56e:	2d c0       	rjmp	.+90     	; 0x5ca <nokia_lcd_write_char+0xdc>
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
 570:	fe 01       	movw	r30, r28
 572:	24 91       	lpm	r18, Z
 574:	30 e0       	ldi	r19, 0x00	; 0
 576:	87 2d       	mov	r24, r7
 578:	65 2d       	mov	r22, r5
 57a:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <__udivmodqi4>
 57e:	02 c0       	rjmp	.+4      	; 0x584 <nokia_lcd_write_char+0x96>
 580:	35 95       	asr	r19
 582:	27 95       	ror	r18
 584:	8a 95       	dec	r24
 586:	e2 f7       	brpl	.-8      	; 0x580 <nokia_lcd_write_char+0x92>
 588:	20 ff       	sbrs	r18, 0
 58a:	0a c0       	rjmp	.+20     	; 0x5a0 <nokia_lcd_write_char+0xb2>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
 58c:	f6 01       	movw	r30, r12
 58e:	60 81       	ld	r22, Z
 590:	67 0d       	add	r22, r7
 592:	f7 01       	movw	r30, r14
 594:	80 81       	ld	r24, Z
 596:	41 e0       	ldi	r20, 0x01	; 1
 598:	86 0d       	add	r24, r6
 59a:	0e 94 4c 02 	call	0x498	; 0x498 <nokia_lcd_set_pixel>
 59e:	09 c0       	rjmp	.+18     	; 0x5b2 <nokia_lcd_write_char+0xc4>
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
 5a0:	f6 01       	movw	r30, r12
 5a2:	60 81       	ld	r22, Z
 5a4:	67 0d       	add	r22, r7
 5a6:	f7 01       	movw	r30, r14
 5a8:	80 81       	ld	r24, Z
 5aa:	44 2d       	mov	r20, r4
 5ac:	86 0d       	add	r24, r6
 5ae:	0e 94 4c 02 	call	0x498	; 0x498 <nokia_lcd_set_pixel>
void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
 5b2:	73 94       	inc	r7
 5b4:	87 2d       	mov	r24, r7
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	80 17       	cp	r24, r16
 5ba:	91 07       	cpc	r25, r17
 5bc:	cc f2       	brlt	.-78     	; 0x570 <nokia_lcd_write_char+0x82>

void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
 5be:	63 94       	inc	r6
 5c0:	86 2d       	mov	r24, r6
 5c2:	90 e0       	ldi	r25, 0x00	; 0
 5c4:	88 15       	cp	r24, r8
 5c6:	99 05       	cpc	r25, r9
 5c8:	74 f4       	brge	.+28     	; 0x5e6 <nokia_lcd_write_char+0xf8>
		for (y = 0; y < 7*scale; y++)
 5ca:	10 16       	cp	r1, r16
 5cc:	11 06       	cpc	r1, r17
 5ce:	bc f7       	brge	.-18     	; 0x5be <nokia_lcd_write_char+0xd0>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
 5d0:	86 2d       	mov	r24, r6
 5d2:	65 2d       	mov	r22, r5
 5d4:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <__udivmodqi4>
 5d8:	e5 01       	movw	r28, r10
 5da:	c8 0f       	add	r28, r24
 5dc:	d1 1d       	adc	r29, r1
 5de:	c8 59       	subi	r28, 0x98	; 152
 5e0:	df 4f       	sbci	r29, 0xFF	; 255
 5e2:	74 2c       	mov	r7, r4
 5e4:	c5 cf       	rjmp	.-118    	; 0x570 <nokia_lcd_write_char+0x82>
 5e6:	80 91 05 03 	lds	r24, 0x0305
 5ea:	91 e0       	ldi	r25, 0x01	; 1
 5ec:	98 0f       	add	r25, r24
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
 5ee:	85 2d       	mov	r24, r5
 5f0:	88 0f       	add	r24, r24
 5f2:	88 0f       	add	r24, r24
 5f4:	85 0d       	add	r24, r5
 5f6:	89 0f       	add	r24, r25
	if (nokia_lcd.cursor_x >= 84) {
 5f8:	84 35       	cpi	r24, 0x54	; 84
 5fa:	18 f4       	brcc	.+6      	; 0x602 <nokia_lcd_write_char+0x114>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
 5fc:	80 93 05 03 	sts	0x0305, r24
 600:	0e c0       	rjmp	.+28     	; 0x61e <nokia_lcd_write_char+0x130>
	if (nokia_lcd.cursor_x >= 84) {
		nokia_lcd.cursor_x = 0;
 602:	10 92 05 03 	sts	0x0305, r1
		nokia_lcd.cursor_y += 7*scale + 1;
 606:	e6 e0       	ldi	r30, 0x06	; 6
 608:	f3 e0       	ldi	r31, 0x03	; 3
 60a:	80 81       	ld	r24, Z
 60c:	91 e0       	ldi	r25, 0x01	; 1
 60e:	98 0f       	add	r25, r24
 610:	85 2d       	mov	r24, r5
 612:	88 0f       	add	r24, r24
 614:	88 0f       	add	r24, r24
 616:	88 0f       	add	r24, r24
 618:	85 19       	sub	r24, r5
 61a:	89 0f       	add	r24, r25
 61c:	80 83       	st	Z, r24
	}
	if (nokia_lcd.cursor_y >= 48) {
 61e:	80 91 06 03 	lds	r24, 0x0306
 622:	80 33       	cpi	r24, 0x30	; 48
 624:	20 f0       	brcs	.+8      	; 0x62e <nokia_lcd_write_char+0x140>
		nokia_lcd.cursor_x = 0;
 626:	10 92 05 03 	sts	0x0305, r1
		nokia_lcd.cursor_y = 0;
 62a:	10 92 06 03 	sts	0x0306, r1
	}
}
 62e:	df 91       	pop	r29
 630:	cf 91       	pop	r28
 632:	1f 91       	pop	r17
 634:	0f 91       	pop	r16
 636:	ff 90       	pop	r15
 638:	ef 90       	pop	r14
 63a:	df 90       	pop	r13
 63c:	cf 90       	pop	r12
 63e:	bf 90       	pop	r11
 640:	af 90       	pop	r10
 642:	9f 90       	pop	r9
 644:	8f 90       	pop	r8
 646:	7f 90       	pop	r7
 648:	6f 90       	pop	r6
 64a:	5f 90       	pop	r5
 64c:	4f 90       	pop	r4
 64e:	08 95       	ret

00000650 <nokia_lcd_write_string>:

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
 650:	1f 93       	push	r17
 652:	cf 93       	push	r28
 654:	df 93       	push	r29
 656:	ec 01       	movw	r28, r24
	while(*str)
 658:	88 81       	ld	r24, Y
 65a:	88 23       	and	r24, r24
 65c:	41 f0       	breq	.+16     	; 0x66e <nokia_lcd_write_string+0x1e>
 65e:	16 2f       	mov	r17, r22
 660:	21 96       	adiw	r28, 0x01	; 1
		nokia_lcd_write_char(*str++, scale);
 662:	61 2f       	mov	r22, r17
 664:	0e 94 77 02 	call	0x4ee	; 0x4ee <nokia_lcd_write_char>
	}
}

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
	while(*str)
 668:	89 91       	ld	r24, Y+
 66a:	81 11       	cpse	r24, r1
 66c:	fa cf       	rjmp	.-12     	; 0x662 <nokia_lcd_write_string+0x12>
		nokia_lcd_write_char(*str++, scale);
}
 66e:	df 91       	pop	r29
 670:	cf 91       	pop	r28
 672:	1f 91       	pop	r17
 674:	08 95       	ret

00000676 <nokia_lcd_set_cursor>:

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
 676:	80 93 05 03 	sts	0x0305, r24
	nokia_lcd.cursor_y = y;
 67a:	60 93 06 03 	sts	0x0306, r22
 67e:	08 95       	ret

00000680 <nokia_lcd_render>:
}

void nokia_lcd_render(void)
{
 680:	0f 93       	push	r16
 682:	1f 93       	push	r17
 684:	cf 93       	push	r28
 686:	df 93       	push	r29
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
 688:	80 e8       	ldi	r24, 0x80	; 128
 68a:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <write_cmd>
	write_cmd(0x40);
 68e:	80 e4       	ldi	r24, 0x40	; 64
 690:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <write_cmd>
 694:	cd e0       	ldi	r28, 0x0D	; 13
 696:	d1 e0       	ldi	r29, 0x01	; 1
 698:	05 e0       	ldi	r16, 0x05	; 5
 69a:	13 e0       	ldi	r17, 0x03	; 3
	write(cmd, 0);
}

static void write_data(uint8_t data)
{
	write(data, 1);
 69c:	61 e0       	ldi	r22, 0x01	; 1
 69e:	89 91       	ld	r24, Y+
 6a0:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <write>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
 6a4:	c0 17       	cp	r28, r16
 6a6:	d1 07       	cpc	r29, r17
 6a8:	c9 f7       	brne	.-14     	; 0x69c <nokia_lcd_render+0x1c>
		write_data(nokia_lcd.screen[i]);
}
 6aa:	df 91       	pop	r29
 6ac:	cf 91       	pop	r28
 6ae:	1f 91       	pop	r17
 6b0:	0f 91       	pop	r16
 6b2:	08 95       	ret

000006b4 <__subsf3>:
 6b4:	50 58       	subi	r21, 0x80	; 128

000006b6 <__addsf3>:
 6b6:	bb 27       	eor	r27, r27
 6b8:	aa 27       	eor	r26, r26
 6ba:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__addsf3x>
 6be:	0c 94 51 04 	jmp	0x8a2	; 0x8a2 <__fp_round>
 6c2:	0e 94 43 04 	call	0x886	; 0x886 <__fp_pscA>
 6c6:	38 f0       	brcs	.+14     	; 0x6d6 <__addsf3+0x20>
 6c8:	0e 94 4a 04 	call	0x894	; 0x894 <__fp_pscB>
 6cc:	20 f0       	brcs	.+8      	; 0x6d6 <__addsf3+0x20>
 6ce:	39 f4       	brne	.+14     	; 0x6de <__addsf3+0x28>
 6d0:	9f 3f       	cpi	r25, 0xFF	; 255
 6d2:	19 f4       	brne	.+6      	; 0x6da <__addsf3+0x24>
 6d4:	26 f4       	brtc	.+8      	; 0x6de <__addsf3+0x28>
 6d6:	0c 94 40 04 	jmp	0x880	; 0x880 <__fp_nan>
 6da:	0e f4       	brtc	.+2      	; 0x6de <__addsf3+0x28>
 6dc:	e0 95       	com	r30
 6de:	e7 fb       	bst	r30, 7
 6e0:	0c 94 3a 04 	jmp	0x874	; 0x874 <__fp_inf>

000006e4 <__addsf3x>:
 6e4:	e9 2f       	mov	r30, r25
 6e6:	0e 94 62 04 	call	0x8c4	; 0x8c4 <__fp_split3>
 6ea:	58 f3       	brcs	.-42     	; 0x6c2 <__addsf3+0xc>
 6ec:	ba 17       	cp	r27, r26
 6ee:	62 07       	cpc	r22, r18
 6f0:	73 07       	cpc	r23, r19
 6f2:	84 07       	cpc	r24, r20
 6f4:	95 07       	cpc	r25, r21
 6f6:	20 f0       	brcs	.+8      	; 0x700 <__addsf3x+0x1c>
 6f8:	79 f4       	brne	.+30     	; 0x718 <__addsf3x+0x34>
 6fa:	a6 f5       	brtc	.+104    	; 0x764 <__addsf3x+0x80>
 6fc:	0c 94 84 04 	jmp	0x908	; 0x908 <__fp_zero>
 700:	0e f4       	brtc	.+2      	; 0x704 <__addsf3x+0x20>
 702:	e0 95       	com	r30
 704:	0b 2e       	mov	r0, r27
 706:	ba 2f       	mov	r27, r26
 708:	a0 2d       	mov	r26, r0
 70a:	0b 01       	movw	r0, r22
 70c:	b9 01       	movw	r22, r18
 70e:	90 01       	movw	r18, r0
 710:	0c 01       	movw	r0, r24
 712:	ca 01       	movw	r24, r20
 714:	a0 01       	movw	r20, r0
 716:	11 24       	eor	r1, r1
 718:	ff 27       	eor	r31, r31
 71a:	59 1b       	sub	r21, r25
 71c:	99 f0       	breq	.+38     	; 0x744 <__addsf3x+0x60>
 71e:	59 3f       	cpi	r21, 0xF9	; 249
 720:	50 f4       	brcc	.+20     	; 0x736 <__addsf3x+0x52>
 722:	50 3e       	cpi	r21, 0xE0	; 224
 724:	68 f1       	brcs	.+90     	; 0x780 <__addsf3x+0x9c>
 726:	1a 16       	cp	r1, r26
 728:	f0 40       	sbci	r31, 0x00	; 0
 72a:	a2 2f       	mov	r26, r18
 72c:	23 2f       	mov	r18, r19
 72e:	34 2f       	mov	r19, r20
 730:	44 27       	eor	r20, r20
 732:	58 5f       	subi	r21, 0xF8	; 248
 734:	f3 cf       	rjmp	.-26     	; 0x71c <__addsf3x+0x38>
 736:	46 95       	lsr	r20
 738:	37 95       	ror	r19
 73a:	27 95       	ror	r18
 73c:	a7 95       	ror	r26
 73e:	f0 40       	sbci	r31, 0x00	; 0
 740:	53 95       	inc	r21
 742:	c9 f7       	brne	.-14     	; 0x736 <__addsf3x+0x52>
 744:	7e f4       	brtc	.+30     	; 0x764 <__addsf3x+0x80>
 746:	1f 16       	cp	r1, r31
 748:	ba 0b       	sbc	r27, r26
 74a:	62 0b       	sbc	r22, r18
 74c:	73 0b       	sbc	r23, r19
 74e:	84 0b       	sbc	r24, r20
 750:	ba f0       	brmi	.+46     	; 0x780 <__addsf3x+0x9c>
 752:	91 50       	subi	r25, 0x01	; 1
 754:	a1 f0       	breq	.+40     	; 0x77e <__addsf3x+0x9a>
 756:	ff 0f       	add	r31, r31
 758:	bb 1f       	adc	r27, r27
 75a:	66 1f       	adc	r22, r22
 75c:	77 1f       	adc	r23, r23
 75e:	88 1f       	adc	r24, r24
 760:	c2 f7       	brpl	.-16     	; 0x752 <__addsf3x+0x6e>
 762:	0e c0       	rjmp	.+28     	; 0x780 <__addsf3x+0x9c>
 764:	ba 0f       	add	r27, r26
 766:	62 1f       	adc	r22, r18
 768:	73 1f       	adc	r23, r19
 76a:	84 1f       	adc	r24, r20
 76c:	48 f4       	brcc	.+18     	; 0x780 <__addsf3x+0x9c>
 76e:	87 95       	ror	r24
 770:	77 95       	ror	r23
 772:	67 95       	ror	r22
 774:	b7 95       	ror	r27
 776:	f7 95       	ror	r31
 778:	9e 3f       	cpi	r25, 0xFE	; 254
 77a:	08 f0       	brcs	.+2      	; 0x77e <__addsf3x+0x9a>
 77c:	b0 cf       	rjmp	.-160    	; 0x6de <__addsf3+0x28>
 77e:	93 95       	inc	r25
 780:	88 0f       	add	r24, r24
 782:	08 f0       	brcs	.+2      	; 0x786 <__addsf3x+0xa2>
 784:	99 27       	eor	r25, r25
 786:	ee 0f       	add	r30, r30
 788:	97 95       	ror	r25
 78a:	87 95       	ror	r24
 78c:	08 95       	ret

0000078e <__fixsfsi>:
 78e:	0e 94 ce 03 	call	0x79c	; 0x79c <__fixunssfsi>
 792:	68 94       	set
 794:	b1 11       	cpse	r27, r1
 796:	0c 94 85 04 	jmp	0x90a	; 0x90a <__fp_szero>
 79a:	08 95       	ret

0000079c <__fixunssfsi>:
 79c:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__fp_splitA>
 7a0:	88 f0       	brcs	.+34     	; 0x7c4 <__fixunssfsi+0x28>
 7a2:	9f 57       	subi	r25, 0x7F	; 127
 7a4:	98 f0       	brcs	.+38     	; 0x7cc <__fixunssfsi+0x30>
 7a6:	b9 2f       	mov	r27, r25
 7a8:	99 27       	eor	r25, r25
 7aa:	b7 51       	subi	r27, 0x17	; 23
 7ac:	b0 f0       	brcs	.+44     	; 0x7da <__fixunssfsi+0x3e>
 7ae:	e1 f0       	breq	.+56     	; 0x7e8 <__fixunssfsi+0x4c>
 7b0:	66 0f       	add	r22, r22
 7b2:	77 1f       	adc	r23, r23
 7b4:	88 1f       	adc	r24, r24
 7b6:	99 1f       	adc	r25, r25
 7b8:	1a f0       	brmi	.+6      	; 0x7c0 <__fixunssfsi+0x24>
 7ba:	ba 95       	dec	r27
 7bc:	c9 f7       	brne	.-14     	; 0x7b0 <__fixunssfsi+0x14>
 7be:	14 c0       	rjmp	.+40     	; 0x7e8 <__fixunssfsi+0x4c>
 7c0:	b1 30       	cpi	r27, 0x01	; 1
 7c2:	91 f0       	breq	.+36     	; 0x7e8 <__fixunssfsi+0x4c>
 7c4:	0e 94 84 04 	call	0x908	; 0x908 <__fp_zero>
 7c8:	b1 e0       	ldi	r27, 0x01	; 1
 7ca:	08 95       	ret
 7cc:	0c 94 84 04 	jmp	0x908	; 0x908 <__fp_zero>
 7d0:	67 2f       	mov	r22, r23
 7d2:	78 2f       	mov	r23, r24
 7d4:	88 27       	eor	r24, r24
 7d6:	b8 5f       	subi	r27, 0xF8	; 248
 7d8:	39 f0       	breq	.+14     	; 0x7e8 <__fixunssfsi+0x4c>
 7da:	b9 3f       	cpi	r27, 0xF9	; 249
 7dc:	cc f3       	brlt	.-14     	; 0x7d0 <__fixunssfsi+0x34>
 7de:	86 95       	lsr	r24
 7e0:	77 95       	ror	r23
 7e2:	67 95       	ror	r22
 7e4:	b3 95       	inc	r27
 7e6:	d9 f7       	brne	.-10     	; 0x7de <__fixunssfsi+0x42>
 7e8:	3e f4       	brtc	.+14     	; 0x7f8 <__fixunssfsi+0x5c>
 7ea:	90 95       	com	r25
 7ec:	80 95       	com	r24
 7ee:	70 95       	com	r23
 7f0:	61 95       	neg	r22
 7f2:	7f 4f       	sbci	r23, 0xFF	; 255
 7f4:	8f 4f       	sbci	r24, 0xFF	; 255
 7f6:	9f 4f       	sbci	r25, 0xFF	; 255
 7f8:	08 95       	ret

000007fa <__floatunsisf>:
 7fa:	e8 94       	clt
 7fc:	09 c0       	rjmp	.+18     	; 0x810 <__floatsisf+0x12>

000007fe <__floatsisf>:
 7fe:	97 fb       	bst	r25, 7
 800:	3e f4       	brtc	.+14     	; 0x810 <__floatsisf+0x12>
 802:	90 95       	com	r25
 804:	80 95       	com	r24
 806:	70 95       	com	r23
 808:	61 95       	neg	r22
 80a:	7f 4f       	sbci	r23, 0xFF	; 255
 80c:	8f 4f       	sbci	r24, 0xFF	; 255
 80e:	9f 4f       	sbci	r25, 0xFF	; 255
 810:	99 23       	and	r25, r25
 812:	a9 f0       	breq	.+42     	; 0x83e <__floatsisf+0x40>
 814:	f9 2f       	mov	r31, r25
 816:	96 e9       	ldi	r25, 0x96	; 150
 818:	bb 27       	eor	r27, r27
 81a:	93 95       	inc	r25
 81c:	f6 95       	lsr	r31
 81e:	87 95       	ror	r24
 820:	77 95       	ror	r23
 822:	67 95       	ror	r22
 824:	b7 95       	ror	r27
 826:	f1 11       	cpse	r31, r1
 828:	f8 cf       	rjmp	.-16     	; 0x81a <__floatsisf+0x1c>
 82a:	fa f4       	brpl	.+62     	; 0x86a <__floatsisf+0x6c>
 82c:	bb 0f       	add	r27, r27
 82e:	11 f4       	brne	.+4      	; 0x834 <__floatsisf+0x36>
 830:	60 ff       	sbrs	r22, 0
 832:	1b c0       	rjmp	.+54     	; 0x86a <__floatsisf+0x6c>
 834:	6f 5f       	subi	r22, 0xFF	; 255
 836:	7f 4f       	sbci	r23, 0xFF	; 255
 838:	8f 4f       	sbci	r24, 0xFF	; 255
 83a:	9f 4f       	sbci	r25, 0xFF	; 255
 83c:	16 c0       	rjmp	.+44     	; 0x86a <__floatsisf+0x6c>
 83e:	88 23       	and	r24, r24
 840:	11 f0       	breq	.+4      	; 0x846 <__floatsisf+0x48>
 842:	96 e9       	ldi	r25, 0x96	; 150
 844:	11 c0       	rjmp	.+34     	; 0x868 <__floatsisf+0x6a>
 846:	77 23       	and	r23, r23
 848:	21 f0       	breq	.+8      	; 0x852 <__floatsisf+0x54>
 84a:	9e e8       	ldi	r25, 0x8E	; 142
 84c:	87 2f       	mov	r24, r23
 84e:	76 2f       	mov	r23, r22
 850:	05 c0       	rjmp	.+10     	; 0x85c <__floatsisf+0x5e>
 852:	66 23       	and	r22, r22
 854:	71 f0       	breq	.+28     	; 0x872 <__floatsisf+0x74>
 856:	96 e8       	ldi	r25, 0x86	; 134
 858:	86 2f       	mov	r24, r22
 85a:	70 e0       	ldi	r23, 0x00	; 0
 85c:	60 e0       	ldi	r22, 0x00	; 0
 85e:	2a f0       	brmi	.+10     	; 0x86a <__floatsisf+0x6c>
 860:	9a 95       	dec	r25
 862:	66 0f       	add	r22, r22
 864:	77 1f       	adc	r23, r23
 866:	88 1f       	adc	r24, r24
 868:	da f7       	brpl	.-10     	; 0x860 <__floatsisf+0x62>
 86a:	88 0f       	add	r24, r24
 86c:	96 95       	lsr	r25
 86e:	87 95       	ror	r24
 870:	97 f9       	bld	r25, 7
 872:	08 95       	ret

00000874 <__fp_inf>:
 874:	97 f9       	bld	r25, 7
 876:	9f 67       	ori	r25, 0x7F	; 127
 878:	80 e8       	ldi	r24, 0x80	; 128
 87a:	70 e0       	ldi	r23, 0x00	; 0
 87c:	60 e0       	ldi	r22, 0x00	; 0
 87e:	08 95       	ret

00000880 <__fp_nan>:
 880:	9f ef       	ldi	r25, 0xFF	; 255
 882:	80 ec       	ldi	r24, 0xC0	; 192
 884:	08 95       	ret

00000886 <__fp_pscA>:
 886:	00 24       	eor	r0, r0
 888:	0a 94       	dec	r0
 88a:	16 16       	cp	r1, r22
 88c:	17 06       	cpc	r1, r23
 88e:	18 06       	cpc	r1, r24
 890:	09 06       	cpc	r0, r25
 892:	08 95       	ret

00000894 <__fp_pscB>:
 894:	00 24       	eor	r0, r0
 896:	0a 94       	dec	r0
 898:	12 16       	cp	r1, r18
 89a:	13 06       	cpc	r1, r19
 89c:	14 06       	cpc	r1, r20
 89e:	05 06       	cpc	r0, r21
 8a0:	08 95       	ret

000008a2 <__fp_round>:
 8a2:	09 2e       	mov	r0, r25
 8a4:	03 94       	inc	r0
 8a6:	00 0c       	add	r0, r0
 8a8:	11 f4       	brne	.+4      	; 0x8ae <__fp_round+0xc>
 8aa:	88 23       	and	r24, r24
 8ac:	52 f0       	brmi	.+20     	; 0x8c2 <__fp_round+0x20>
 8ae:	bb 0f       	add	r27, r27
 8b0:	40 f4       	brcc	.+16     	; 0x8c2 <__fp_round+0x20>
 8b2:	bf 2b       	or	r27, r31
 8b4:	11 f4       	brne	.+4      	; 0x8ba <__fp_round+0x18>
 8b6:	60 ff       	sbrs	r22, 0
 8b8:	04 c0       	rjmp	.+8      	; 0x8c2 <__fp_round+0x20>
 8ba:	6f 5f       	subi	r22, 0xFF	; 255
 8bc:	7f 4f       	sbci	r23, 0xFF	; 255
 8be:	8f 4f       	sbci	r24, 0xFF	; 255
 8c0:	9f 4f       	sbci	r25, 0xFF	; 255
 8c2:	08 95       	ret

000008c4 <__fp_split3>:
 8c4:	57 fd       	sbrc	r21, 7
 8c6:	90 58       	subi	r25, 0x80	; 128
 8c8:	44 0f       	add	r20, r20
 8ca:	55 1f       	adc	r21, r21
 8cc:	59 f0       	breq	.+22     	; 0x8e4 <__fp_splitA+0x10>
 8ce:	5f 3f       	cpi	r21, 0xFF	; 255
 8d0:	71 f0       	breq	.+28     	; 0x8ee <__fp_splitA+0x1a>
 8d2:	47 95       	ror	r20

000008d4 <__fp_splitA>:
 8d4:	88 0f       	add	r24, r24
 8d6:	97 fb       	bst	r25, 7
 8d8:	99 1f       	adc	r25, r25
 8da:	61 f0       	breq	.+24     	; 0x8f4 <__fp_splitA+0x20>
 8dc:	9f 3f       	cpi	r25, 0xFF	; 255
 8de:	79 f0       	breq	.+30     	; 0x8fe <__fp_splitA+0x2a>
 8e0:	87 95       	ror	r24
 8e2:	08 95       	ret
 8e4:	12 16       	cp	r1, r18
 8e6:	13 06       	cpc	r1, r19
 8e8:	14 06       	cpc	r1, r20
 8ea:	55 1f       	adc	r21, r21
 8ec:	f2 cf       	rjmp	.-28     	; 0x8d2 <__fp_split3+0xe>
 8ee:	46 95       	lsr	r20
 8f0:	f1 df       	rcall	.-30     	; 0x8d4 <__fp_splitA>
 8f2:	08 c0       	rjmp	.+16     	; 0x904 <__stack+0x5>
 8f4:	16 16       	cp	r1, r22
 8f6:	17 06       	cpc	r1, r23
 8f8:	18 06       	cpc	r1, r24
 8fa:	99 1f       	adc	r25, r25
 8fc:	f1 cf       	rjmp	.-30     	; 0x8e0 <__fp_splitA+0xc>
 8fe:	86 95       	lsr	r24
 900:	71 05       	cpc	r23, r1
 902:	61 05       	cpc	r22, r1
 904:	08 94       	sec
 906:	08 95       	ret

00000908 <__fp_zero>:
 908:	e8 94       	clt

0000090a <__fp_szero>:
 90a:	bb 27       	eor	r27, r27
 90c:	66 27       	eor	r22, r22
 90e:	77 27       	eor	r23, r23
 910:	cb 01       	movw	r24, r22
 912:	97 f9       	bld	r25, 7
 914:	08 95       	ret

00000916 <__mulsf3>:
 916:	0e 94 9e 04 	call	0x93c	; 0x93c <__mulsf3x>
 91a:	0c 94 51 04 	jmp	0x8a2	; 0x8a2 <__fp_round>
 91e:	0e 94 43 04 	call	0x886	; 0x886 <__fp_pscA>
 922:	38 f0       	brcs	.+14     	; 0x932 <__mulsf3+0x1c>
 924:	0e 94 4a 04 	call	0x894	; 0x894 <__fp_pscB>
 928:	20 f0       	brcs	.+8      	; 0x932 <__mulsf3+0x1c>
 92a:	95 23       	and	r25, r21
 92c:	11 f0       	breq	.+4      	; 0x932 <__mulsf3+0x1c>
 92e:	0c 94 3a 04 	jmp	0x874	; 0x874 <__fp_inf>
 932:	0c 94 40 04 	jmp	0x880	; 0x880 <__fp_nan>
 936:	11 24       	eor	r1, r1
 938:	0c 94 85 04 	jmp	0x90a	; 0x90a <__fp_szero>

0000093c <__mulsf3x>:
 93c:	0e 94 62 04 	call	0x8c4	; 0x8c4 <__fp_split3>
 940:	70 f3       	brcs	.-36     	; 0x91e <__mulsf3+0x8>

00000942 <__mulsf3_pse>:
 942:	95 9f       	mul	r25, r21
 944:	c1 f3       	breq	.-16     	; 0x936 <__mulsf3+0x20>
 946:	95 0f       	add	r25, r21
 948:	50 e0       	ldi	r21, 0x00	; 0
 94a:	55 1f       	adc	r21, r21
 94c:	62 9f       	mul	r22, r18
 94e:	f0 01       	movw	r30, r0
 950:	72 9f       	mul	r23, r18
 952:	bb 27       	eor	r27, r27
 954:	f0 0d       	add	r31, r0
 956:	b1 1d       	adc	r27, r1
 958:	63 9f       	mul	r22, r19
 95a:	aa 27       	eor	r26, r26
 95c:	f0 0d       	add	r31, r0
 95e:	b1 1d       	adc	r27, r1
 960:	aa 1f       	adc	r26, r26
 962:	64 9f       	mul	r22, r20
 964:	66 27       	eor	r22, r22
 966:	b0 0d       	add	r27, r0
 968:	a1 1d       	adc	r26, r1
 96a:	66 1f       	adc	r22, r22
 96c:	82 9f       	mul	r24, r18
 96e:	22 27       	eor	r18, r18
 970:	b0 0d       	add	r27, r0
 972:	a1 1d       	adc	r26, r1
 974:	62 1f       	adc	r22, r18
 976:	73 9f       	mul	r23, r19
 978:	b0 0d       	add	r27, r0
 97a:	a1 1d       	adc	r26, r1
 97c:	62 1f       	adc	r22, r18
 97e:	83 9f       	mul	r24, r19
 980:	a0 0d       	add	r26, r0
 982:	61 1d       	adc	r22, r1
 984:	22 1f       	adc	r18, r18
 986:	74 9f       	mul	r23, r20
 988:	33 27       	eor	r19, r19
 98a:	a0 0d       	add	r26, r0
 98c:	61 1d       	adc	r22, r1
 98e:	23 1f       	adc	r18, r19
 990:	84 9f       	mul	r24, r20
 992:	60 0d       	add	r22, r0
 994:	21 1d       	adc	r18, r1
 996:	82 2f       	mov	r24, r18
 998:	76 2f       	mov	r23, r22
 99a:	6a 2f       	mov	r22, r26
 99c:	11 24       	eor	r1, r1
 99e:	9f 57       	subi	r25, 0x7F	; 127
 9a0:	50 40       	sbci	r21, 0x00	; 0
 9a2:	9a f0       	brmi	.+38     	; 0x9ca <__mulsf3_pse+0x88>
 9a4:	f1 f0       	breq	.+60     	; 0x9e2 <__mulsf3_pse+0xa0>
 9a6:	88 23       	and	r24, r24
 9a8:	4a f0       	brmi	.+18     	; 0x9bc <__mulsf3_pse+0x7a>
 9aa:	ee 0f       	add	r30, r30
 9ac:	ff 1f       	adc	r31, r31
 9ae:	bb 1f       	adc	r27, r27
 9b0:	66 1f       	adc	r22, r22
 9b2:	77 1f       	adc	r23, r23
 9b4:	88 1f       	adc	r24, r24
 9b6:	91 50       	subi	r25, 0x01	; 1
 9b8:	50 40       	sbci	r21, 0x00	; 0
 9ba:	a9 f7       	brne	.-22     	; 0x9a6 <__mulsf3_pse+0x64>
 9bc:	9e 3f       	cpi	r25, 0xFE	; 254
 9be:	51 05       	cpc	r21, r1
 9c0:	80 f0       	brcs	.+32     	; 0x9e2 <__mulsf3_pse+0xa0>
 9c2:	0c 94 3a 04 	jmp	0x874	; 0x874 <__fp_inf>
 9c6:	0c 94 85 04 	jmp	0x90a	; 0x90a <__fp_szero>
 9ca:	5f 3f       	cpi	r21, 0xFF	; 255
 9cc:	e4 f3       	brlt	.-8      	; 0x9c6 <__mulsf3_pse+0x84>
 9ce:	98 3e       	cpi	r25, 0xE8	; 232
 9d0:	d4 f3       	brlt	.-12     	; 0x9c6 <__mulsf3_pse+0x84>
 9d2:	86 95       	lsr	r24
 9d4:	77 95       	ror	r23
 9d6:	67 95       	ror	r22
 9d8:	b7 95       	ror	r27
 9da:	f7 95       	ror	r31
 9dc:	e7 95       	ror	r30
 9de:	9f 5f       	subi	r25, 0xFF	; 255
 9e0:	c1 f7       	brne	.-16     	; 0x9d2 <__mulsf3_pse+0x90>
 9e2:	fe 2b       	or	r31, r30
 9e4:	88 0f       	add	r24, r24
 9e6:	91 1d       	adc	r25, r1
 9e8:	96 95       	lsr	r25
 9ea:	87 95       	ror	r24
 9ec:	97 f9       	bld	r25, 7
 9ee:	08 95       	ret

000009f0 <__udivmodqi4>:
 9f0:	99 1b       	sub	r25, r25
 9f2:	79 e0       	ldi	r23, 0x09	; 9
 9f4:	04 c0       	rjmp	.+8      	; 0x9fe <__udivmodqi4_ep>

000009f6 <__udivmodqi4_loop>:
 9f6:	99 1f       	adc	r25, r25
 9f8:	96 17       	cp	r25, r22
 9fa:	08 f0       	brcs	.+2      	; 0x9fe <__udivmodqi4_ep>
 9fc:	96 1b       	sub	r25, r22

000009fe <__udivmodqi4_ep>:
 9fe:	88 1f       	adc	r24, r24
 a00:	7a 95       	dec	r23
 a02:	c9 f7       	brne	.-14     	; 0x9f6 <__udivmodqi4_loop>
 a04:	80 95       	com	r24
 a06:	08 95       	ret

00000a08 <sprintf>:
 a08:	ae e0       	ldi	r26, 0x0E	; 14
 a0a:	b0 e0       	ldi	r27, 0x00	; 0
 a0c:	ea e0       	ldi	r30, 0x0A	; 10
 a0e:	f5 e0       	ldi	r31, 0x05	; 5
 a10:	0c 94 b3 07 	jmp	0xf66	; 0xf66 <__prologue_saves__+0x1c>
 a14:	0d 89       	ldd	r16, Y+21	; 0x15
 a16:	1e 89       	ldd	r17, Y+22	; 0x16
 a18:	86 e0       	ldi	r24, 0x06	; 6
 a1a:	8c 83       	std	Y+4, r24	; 0x04
 a1c:	1a 83       	std	Y+2, r17	; 0x02
 a1e:	09 83       	std	Y+1, r16	; 0x01
 a20:	8f ef       	ldi	r24, 0xFF	; 255
 a22:	9f e7       	ldi	r25, 0x7F	; 127
 a24:	9e 83       	std	Y+6, r25	; 0x06
 a26:	8d 83       	std	Y+5, r24	; 0x05
 a28:	ae 01       	movw	r20, r28
 a2a:	47 5e       	subi	r20, 0xE7	; 231
 a2c:	5f 4f       	sbci	r21, 0xFF	; 255
 a2e:	6f 89       	ldd	r22, Y+23	; 0x17
 a30:	78 8d       	ldd	r23, Y+24	; 0x18
 a32:	ce 01       	movw	r24, r28
 a34:	01 96       	adiw	r24, 0x01	; 1
 a36:	0e 94 27 05 	call	0xa4e	; 0xa4e <vfprintf>
 a3a:	2f 81       	ldd	r18, Y+7	; 0x07
 a3c:	38 85       	ldd	r19, Y+8	; 0x08
 a3e:	f8 01       	movw	r30, r16
 a40:	e2 0f       	add	r30, r18
 a42:	f3 1f       	adc	r31, r19
 a44:	10 82       	st	Z, r1
 a46:	2e 96       	adiw	r28, 0x0e	; 14
 a48:	e4 e0       	ldi	r30, 0x04	; 4
 a4a:	0c 94 cf 07 	jmp	0xf9e	; 0xf9e <__epilogue_restores__+0x1c>

00000a4e <vfprintf>:
 a4e:	ac e0       	ldi	r26, 0x0C	; 12
 a50:	b0 e0       	ldi	r27, 0x00	; 0
 a52:	ed e2       	ldi	r30, 0x2D	; 45
 a54:	f5 e0       	ldi	r31, 0x05	; 5
 a56:	0c 94 a5 07 	jmp	0xf4a	; 0xf4a <__prologue_saves__>
 a5a:	7c 01       	movw	r14, r24
 a5c:	6b 01       	movw	r12, r22
 a5e:	8a 01       	movw	r16, r20
 a60:	fc 01       	movw	r30, r24
 a62:	17 82       	std	Z+7, r1	; 0x07
 a64:	16 82       	std	Z+6, r1	; 0x06
 a66:	83 81       	ldd	r24, Z+3	; 0x03
 a68:	81 ff       	sbrs	r24, 1
 a6a:	bd c1       	rjmp	.+890    	; 0xde6 <vfprintf+0x398>
 a6c:	ce 01       	movw	r24, r28
 a6e:	01 96       	adiw	r24, 0x01	; 1
 a70:	4c 01       	movw	r8, r24
 a72:	f7 01       	movw	r30, r14
 a74:	93 81       	ldd	r25, Z+3	; 0x03
 a76:	f6 01       	movw	r30, r12
 a78:	93 fd       	sbrc	r25, 3
 a7a:	85 91       	lpm	r24, Z+
 a7c:	93 ff       	sbrs	r25, 3
 a7e:	81 91       	ld	r24, Z+
 a80:	6f 01       	movw	r12, r30
 a82:	88 23       	and	r24, r24
 a84:	09 f4       	brne	.+2      	; 0xa88 <vfprintf+0x3a>
 a86:	ab c1       	rjmp	.+854    	; 0xdde <vfprintf+0x390>
 a88:	85 32       	cpi	r24, 0x25	; 37
 a8a:	39 f4       	brne	.+14     	; 0xa9a <vfprintf+0x4c>
 a8c:	93 fd       	sbrc	r25, 3
 a8e:	85 91       	lpm	r24, Z+
 a90:	93 ff       	sbrs	r25, 3
 a92:	81 91       	ld	r24, Z+
 a94:	6f 01       	movw	r12, r30
 a96:	85 32       	cpi	r24, 0x25	; 37
 a98:	29 f4       	brne	.+10     	; 0xaa4 <vfprintf+0x56>
 a9a:	b7 01       	movw	r22, r14
 a9c:	90 e0       	ldi	r25, 0x00	; 0
 a9e:	0e 94 0f 07 	call	0xe1e	; 0xe1e <fputc>
 aa2:	e7 cf       	rjmp	.-50     	; 0xa72 <vfprintf+0x24>
 aa4:	51 2c       	mov	r5, r1
 aa6:	31 2c       	mov	r3, r1
 aa8:	20 e0       	ldi	r18, 0x00	; 0
 aaa:	20 32       	cpi	r18, 0x20	; 32
 aac:	a0 f4       	brcc	.+40     	; 0xad6 <vfprintf+0x88>
 aae:	8b 32       	cpi	r24, 0x2B	; 43
 ab0:	69 f0       	breq	.+26     	; 0xacc <vfprintf+0x7e>
 ab2:	30 f4       	brcc	.+12     	; 0xac0 <vfprintf+0x72>
 ab4:	80 32       	cpi	r24, 0x20	; 32
 ab6:	59 f0       	breq	.+22     	; 0xace <vfprintf+0x80>
 ab8:	83 32       	cpi	r24, 0x23	; 35
 aba:	69 f4       	brne	.+26     	; 0xad6 <vfprintf+0x88>
 abc:	20 61       	ori	r18, 0x10	; 16
 abe:	2c c0       	rjmp	.+88     	; 0xb18 <vfprintf+0xca>
 ac0:	8d 32       	cpi	r24, 0x2D	; 45
 ac2:	39 f0       	breq	.+14     	; 0xad2 <vfprintf+0x84>
 ac4:	80 33       	cpi	r24, 0x30	; 48
 ac6:	39 f4       	brne	.+14     	; 0xad6 <vfprintf+0x88>
 ac8:	21 60       	ori	r18, 0x01	; 1
 aca:	26 c0       	rjmp	.+76     	; 0xb18 <vfprintf+0xca>
 acc:	22 60       	ori	r18, 0x02	; 2
 ace:	24 60       	ori	r18, 0x04	; 4
 ad0:	23 c0       	rjmp	.+70     	; 0xb18 <vfprintf+0xca>
 ad2:	28 60       	ori	r18, 0x08	; 8
 ad4:	21 c0       	rjmp	.+66     	; 0xb18 <vfprintf+0xca>
 ad6:	27 fd       	sbrc	r18, 7
 ad8:	27 c0       	rjmp	.+78     	; 0xb28 <vfprintf+0xda>
 ada:	30 ed       	ldi	r19, 0xD0	; 208
 adc:	38 0f       	add	r19, r24
 ade:	3a 30       	cpi	r19, 0x0A	; 10
 ae0:	78 f4       	brcc	.+30     	; 0xb00 <vfprintf+0xb2>
 ae2:	26 ff       	sbrs	r18, 6
 ae4:	06 c0       	rjmp	.+12     	; 0xaf2 <vfprintf+0xa4>
 ae6:	fa e0       	ldi	r31, 0x0A	; 10
 ae8:	5f 9e       	mul	r5, r31
 aea:	30 0d       	add	r19, r0
 aec:	11 24       	eor	r1, r1
 aee:	53 2e       	mov	r5, r19
 af0:	13 c0       	rjmp	.+38     	; 0xb18 <vfprintf+0xca>
 af2:	8a e0       	ldi	r24, 0x0A	; 10
 af4:	38 9e       	mul	r3, r24
 af6:	30 0d       	add	r19, r0
 af8:	11 24       	eor	r1, r1
 afa:	33 2e       	mov	r3, r19
 afc:	20 62       	ori	r18, 0x20	; 32
 afe:	0c c0       	rjmp	.+24     	; 0xb18 <vfprintf+0xca>
 b00:	8e 32       	cpi	r24, 0x2E	; 46
 b02:	21 f4       	brne	.+8      	; 0xb0c <vfprintf+0xbe>
 b04:	26 fd       	sbrc	r18, 6
 b06:	6b c1       	rjmp	.+726    	; 0xdde <vfprintf+0x390>
 b08:	20 64       	ori	r18, 0x40	; 64
 b0a:	06 c0       	rjmp	.+12     	; 0xb18 <vfprintf+0xca>
 b0c:	8c 36       	cpi	r24, 0x6C	; 108
 b0e:	11 f4       	brne	.+4      	; 0xb14 <vfprintf+0xc6>
 b10:	20 68       	ori	r18, 0x80	; 128
 b12:	02 c0       	rjmp	.+4      	; 0xb18 <vfprintf+0xca>
 b14:	88 36       	cpi	r24, 0x68	; 104
 b16:	41 f4       	brne	.+16     	; 0xb28 <vfprintf+0xda>
 b18:	f6 01       	movw	r30, r12
 b1a:	93 fd       	sbrc	r25, 3
 b1c:	85 91       	lpm	r24, Z+
 b1e:	93 ff       	sbrs	r25, 3
 b20:	81 91       	ld	r24, Z+
 b22:	6f 01       	movw	r12, r30
 b24:	81 11       	cpse	r24, r1
 b26:	c1 cf       	rjmp	.-126    	; 0xaaa <vfprintf+0x5c>
 b28:	98 2f       	mov	r25, r24
 b2a:	9f 7d       	andi	r25, 0xDF	; 223
 b2c:	95 54       	subi	r25, 0x45	; 69
 b2e:	93 30       	cpi	r25, 0x03	; 3
 b30:	28 f4       	brcc	.+10     	; 0xb3c <vfprintf+0xee>
 b32:	0c 5f       	subi	r16, 0xFC	; 252
 b34:	1f 4f       	sbci	r17, 0xFF	; 255
 b36:	ff e3       	ldi	r31, 0x3F	; 63
 b38:	f9 83       	std	Y+1, r31	; 0x01
 b3a:	0d c0       	rjmp	.+26     	; 0xb56 <vfprintf+0x108>
 b3c:	83 36       	cpi	r24, 0x63	; 99
 b3e:	31 f0       	breq	.+12     	; 0xb4c <vfprintf+0xfe>
 b40:	83 37       	cpi	r24, 0x73	; 115
 b42:	71 f0       	breq	.+28     	; 0xb60 <vfprintf+0x112>
 b44:	83 35       	cpi	r24, 0x53	; 83
 b46:	09 f0       	breq	.+2      	; 0xb4a <vfprintf+0xfc>
 b48:	5b c0       	rjmp	.+182    	; 0xc00 <vfprintf+0x1b2>
 b4a:	22 c0       	rjmp	.+68     	; 0xb90 <vfprintf+0x142>
 b4c:	f8 01       	movw	r30, r16
 b4e:	80 81       	ld	r24, Z
 b50:	89 83       	std	Y+1, r24	; 0x01
 b52:	0e 5f       	subi	r16, 0xFE	; 254
 b54:	1f 4f       	sbci	r17, 0xFF	; 255
 b56:	44 24       	eor	r4, r4
 b58:	43 94       	inc	r4
 b5a:	51 2c       	mov	r5, r1
 b5c:	54 01       	movw	r10, r8
 b5e:	15 c0       	rjmp	.+42     	; 0xb8a <vfprintf+0x13c>
 b60:	38 01       	movw	r6, r16
 b62:	f2 e0       	ldi	r31, 0x02	; 2
 b64:	6f 0e       	add	r6, r31
 b66:	71 1c       	adc	r7, r1
 b68:	f8 01       	movw	r30, r16
 b6a:	a0 80       	ld	r10, Z
 b6c:	b1 80       	ldd	r11, Z+1	; 0x01
 b6e:	26 ff       	sbrs	r18, 6
 b70:	03 c0       	rjmp	.+6      	; 0xb78 <vfprintf+0x12a>
 b72:	65 2d       	mov	r22, r5
 b74:	70 e0       	ldi	r23, 0x00	; 0
 b76:	02 c0       	rjmp	.+4      	; 0xb7c <vfprintf+0x12e>
 b78:	6f ef       	ldi	r22, 0xFF	; 255
 b7a:	7f ef       	ldi	r23, 0xFF	; 255
 b7c:	c5 01       	movw	r24, r10
 b7e:	2c 87       	std	Y+12, r18	; 0x0c
 b80:	0e 94 04 07 	call	0xe08	; 0xe08 <strnlen>
 b84:	2c 01       	movw	r4, r24
 b86:	83 01       	movw	r16, r6
 b88:	2c 85       	ldd	r18, Y+12	; 0x0c
 b8a:	2f 77       	andi	r18, 0x7F	; 127
 b8c:	22 2e       	mov	r2, r18
 b8e:	17 c0       	rjmp	.+46     	; 0xbbe <vfprintf+0x170>
 b90:	38 01       	movw	r6, r16
 b92:	f2 e0       	ldi	r31, 0x02	; 2
 b94:	6f 0e       	add	r6, r31
 b96:	71 1c       	adc	r7, r1
 b98:	f8 01       	movw	r30, r16
 b9a:	a0 80       	ld	r10, Z
 b9c:	b1 80       	ldd	r11, Z+1	; 0x01
 b9e:	26 ff       	sbrs	r18, 6
 ba0:	03 c0       	rjmp	.+6      	; 0xba8 <vfprintf+0x15a>
 ba2:	65 2d       	mov	r22, r5
 ba4:	70 e0       	ldi	r23, 0x00	; 0
 ba6:	02 c0       	rjmp	.+4      	; 0xbac <vfprintf+0x15e>
 ba8:	6f ef       	ldi	r22, 0xFF	; 255
 baa:	7f ef       	ldi	r23, 0xFF	; 255
 bac:	c5 01       	movw	r24, r10
 bae:	2c 87       	std	Y+12, r18	; 0x0c
 bb0:	0e 94 f9 06 	call	0xdf2	; 0xdf2 <strnlen_P>
 bb4:	2c 01       	movw	r4, r24
 bb6:	2c 85       	ldd	r18, Y+12	; 0x0c
 bb8:	20 68       	ori	r18, 0x80	; 128
 bba:	22 2e       	mov	r2, r18
 bbc:	83 01       	movw	r16, r6
 bbe:	23 fc       	sbrc	r2, 3
 bc0:	1b c0       	rjmp	.+54     	; 0xbf8 <vfprintf+0x1aa>
 bc2:	83 2d       	mov	r24, r3
 bc4:	90 e0       	ldi	r25, 0x00	; 0
 bc6:	48 16       	cp	r4, r24
 bc8:	59 06       	cpc	r5, r25
 bca:	b0 f4       	brcc	.+44     	; 0xbf8 <vfprintf+0x1aa>
 bcc:	b7 01       	movw	r22, r14
 bce:	80 e2       	ldi	r24, 0x20	; 32
 bd0:	90 e0       	ldi	r25, 0x00	; 0
 bd2:	0e 94 0f 07 	call	0xe1e	; 0xe1e <fputc>
 bd6:	3a 94       	dec	r3
 bd8:	f4 cf       	rjmp	.-24     	; 0xbc2 <vfprintf+0x174>
 bda:	f5 01       	movw	r30, r10
 bdc:	27 fc       	sbrc	r2, 7
 bde:	85 91       	lpm	r24, Z+
 be0:	27 fe       	sbrs	r2, 7
 be2:	81 91       	ld	r24, Z+
 be4:	5f 01       	movw	r10, r30
 be6:	b7 01       	movw	r22, r14
 be8:	90 e0       	ldi	r25, 0x00	; 0
 bea:	0e 94 0f 07 	call	0xe1e	; 0xe1e <fputc>
 bee:	31 10       	cpse	r3, r1
 bf0:	3a 94       	dec	r3
 bf2:	f1 e0       	ldi	r31, 0x01	; 1
 bf4:	4f 1a       	sub	r4, r31
 bf6:	51 08       	sbc	r5, r1
 bf8:	41 14       	cp	r4, r1
 bfa:	51 04       	cpc	r5, r1
 bfc:	71 f7       	brne	.-36     	; 0xbda <vfprintf+0x18c>
 bfe:	e5 c0       	rjmp	.+458    	; 0xdca <vfprintf+0x37c>
 c00:	84 36       	cpi	r24, 0x64	; 100
 c02:	11 f0       	breq	.+4      	; 0xc08 <vfprintf+0x1ba>
 c04:	89 36       	cpi	r24, 0x69	; 105
 c06:	39 f5       	brne	.+78     	; 0xc56 <vfprintf+0x208>
 c08:	f8 01       	movw	r30, r16
 c0a:	27 ff       	sbrs	r18, 7
 c0c:	07 c0       	rjmp	.+14     	; 0xc1c <vfprintf+0x1ce>
 c0e:	60 81       	ld	r22, Z
 c10:	71 81       	ldd	r23, Z+1	; 0x01
 c12:	82 81       	ldd	r24, Z+2	; 0x02
 c14:	93 81       	ldd	r25, Z+3	; 0x03
 c16:	0c 5f       	subi	r16, 0xFC	; 252
 c18:	1f 4f       	sbci	r17, 0xFF	; 255
 c1a:	08 c0       	rjmp	.+16     	; 0xc2c <vfprintf+0x1de>
 c1c:	60 81       	ld	r22, Z
 c1e:	71 81       	ldd	r23, Z+1	; 0x01
 c20:	07 2e       	mov	r0, r23
 c22:	00 0c       	add	r0, r0
 c24:	88 0b       	sbc	r24, r24
 c26:	99 0b       	sbc	r25, r25
 c28:	0e 5f       	subi	r16, 0xFE	; 254
 c2a:	1f 4f       	sbci	r17, 0xFF	; 255
 c2c:	2f 76       	andi	r18, 0x6F	; 111
 c2e:	72 2e       	mov	r7, r18
 c30:	97 ff       	sbrs	r25, 7
 c32:	09 c0       	rjmp	.+18     	; 0xc46 <vfprintf+0x1f8>
 c34:	90 95       	com	r25
 c36:	80 95       	com	r24
 c38:	70 95       	com	r23
 c3a:	61 95       	neg	r22
 c3c:	7f 4f       	sbci	r23, 0xFF	; 255
 c3e:	8f 4f       	sbci	r24, 0xFF	; 255
 c40:	9f 4f       	sbci	r25, 0xFF	; 255
 c42:	20 68       	ori	r18, 0x80	; 128
 c44:	72 2e       	mov	r7, r18
 c46:	2a e0       	ldi	r18, 0x0A	; 10
 c48:	30 e0       	ldi	r19, 0x00	; 0
 c4a:	a4 01       	movw	r20, r8
 c4c:	0e 94 47 07 	call	0xe8e	; 0xe8e <__ultoa_invert>
 c50:	a8 2e       	mov	r10, r24
 c52:	a8 18       	sub	r10, r8
 c54:	44 c0       	rjmp	.+136    	; 0xcde <vfprintf+0x290>
 c56:	85 37       	cpi	r24, 0x75	; 117
 c58:	29 f4       	brne	.+10     	; 0xc64 <vfprintf+0x216>
 c5a:	2f 7e       	andi	r18, 0xEF	; 239
 c5c:	b2 2e       	mov	r11, r18
 c5e:	2a e0       	ldi	r18, 0x0A	; 10
 c60:	30 e0       	ldi	r19, 0x00	; 0
 c62:	25 c0       	rjmp	.+74     	; 0xcae <vfprintf+0x260>
 c64:	f2 2f       	mov	r31, r18
 c66:	f9 7f       	andi	r31, 0xF9	; 249
 c68:	bf 2e       	mov	r11, r31
 c6a:	8f 36       	cpi	r24, 0x6F	; 111
 c6c:	c1 f0       	breq	.+48     	; 0xc9e <vfprintf+0x250>
 c6e:	18 f4       	brcc	.+6      	; 0xc76 <vfprintf+0x228>
 c70:	88 35       	cpi	r24, 0x58	; 88
 c72:	79 f0       	breq	.+30     	; 0xc92 <vfprintf+0x244>
 c74:	b4 c0       	rjmp	.+360    	; 0xdde <vfprintf+0x390>
 c76:	80 37       	cpi	r24, 0x70	; 112
 c78:	19 f0       	breq	.+6      	; 0xc80 <vfprintf+0x232>
 c7a:	88 37       	cpi	r24, 0x78	; 120
 c7c:	21 f0       	breq	.+8      	; 0xc86 <vfprintf+0x238>
 c7e:	af c0       	rjmp	.+350    	; 0xdde <vfprintf+0x390>
 c80:	2f 2f       	mov	r18, r31
 c82:	20 61       	ori	r18, 0x10	; 16
 c84:	b2 2e       	mov	r11, r18
 c86:	b4 fe       	sbrs	r11, 4
 c88:	0d c0       	rjmp	.+26     	; 0xca4 <vfprintf+0x256>
 c8a:	8b 2d       	mov	r24, r11
 c8c:	84 60       	ori	r24, 0x04	; 4
 c8e:	b8 2e       	mov	r11, r24
 c90:	09 c0       	rjmp	.+18     	; 0xca4 <vfprintf+0x256>
 c92:	24 ff       	sbrs	r18, 4
 c94:	0a c0       	rjmp	.+20     	; 0xcaa <vfprintf+0x25c>
 c96:	9f 2f       	mov	r25, r31
 c98:	96 60       	ori	r25, 0x06	; 6
 c9a:	b9 2e       	mov	r11, r25
 c9c:	06 c0       	rjmp	.+12     	; 0xcaa <vfprintf+0x25c>
 c9e:	28 e0       	ldi	r18, 0x08	; 8
 ca0:	30 e0       	ldi	r19, 0x00	; 0
 ca2:	05 c0       	rjmp	.+10     	; 0xcae <vfprintf+0x260>
 ca4:	20 e1       	ldi	r18, 0x10	; 16
 ca6:	30 e0       	ldi	r19, 0x00	; 0
 ca8:	02 c0       	rjmp	.+4      	; 0xcae <vfprintf+0x260>
 caa:	20 e1       	ldi	r18, 0x10	; 16
 cac:	32 e0       	ldi	r19, 0x02	; 2
 cae:	f8 01       	movw	r30, r16
 cb0:	b7 fe       	sbrs	r11, 7
 cb2:	07 c0       	rjmp	.+14     	; 0xcc2 <vfprintf+0x274>
 cb4:	60 81       	ld	r22, Z
 cb6:	71 81       	ldd	r23, Z+1	; 0x01
 cb8:	82 81       	ldd	r24, Z+2	; 0x02
 cba:	93 81       	ldd	r25, Z+3	; 0x03
 cbc:	0c 5f       	subi	r16, 0xFC	; 252
 cbe:	1f 4f       	sbci	r17, 0xFF	; 255
 cc0:	06 c0       	rjmp	.+12     	; 0xcce <vfprintf+0x280>
 cc2:	60 81       	ld	r22, Z
 cc4:	71 81       	ldd	r23, Z+1	; 0x01
 cc6:	80 e0       	ldi	r24, 0x00	; 0
 cc8:	90 e0       	ldi	r25, 0x00	; 0
 cca:	0e 5f       	subi	r16, 0xFE	; 254
 ccc:	1f 4f       	sbci	r17, 0xFF	; 255
 cce:	a4 01       	movw	r20, r8
 cd0:	0e 94 47 07 	call	0xe8e	; 0xe8e <__ultoa_invert>
 cd4:	a8 2e       	mov	r10, r24
 cd6:	a8 18       	sub	r10, r8
 cd8:	fb 2d       	mov	r31, r11
 cda:	ff 77       	andi	r31, 0x7F	; 127
 cdc:	7f 2e       	mov	r7, r31
 cde:	76 fe       	sbrs	r7, 6
 ce0:	0b c0       	rjmp	.+22     	; 0xcf8 <vfprintf+0x2aa>
 ce2:	37 2d       	mov	r19, r7
 ce4:	3e 7f       	andi	r19, 0xFE	; 254
 ce6:	a5 14       	cp	r10, r5
 ce8:	50 f4       	brcc	.+20     	; 0xcfe <vfprintf+0x2b0>
 cea:	74 fe       	sbrs	r7, 4
 cec:	0a c0       	rjmp	.+20     	; 0xd02 <vfprintf+0x2b4>
 cee:	72 fc       	sbrc	r7, 2
 cf0:	08 c0       	rjmp	.+16     	; 0xd02 <vfprintf+0x2b4>
 cf2:	37 2d       	mov	r19, r7
 cf4:	3e 7e       	andi	r19, 0xEE	; 238
 cf6:	05 c0       	rjmp	.+10     	; 0xd02 <vfprintf+0x2b4>
 cf8:	ba 2c       	mov	r11, r10
 cfa:	37 2d       	mov	r19, r7
 cfc:	03 c0       	rjmp	.+6      	; 0xd04 <vfprintf+0x2b6>
 cfe:	ba 2c       	mov	r11, r10
 d00:	01 c0       	rjmp	.+2      	; 0xd04 <vfprintf+0x2b6>
 d02:	b5 2c       	mov	r11, r5
 d04:	34 ff       	sbrs	r19, 4
 d06:	0d c0       	rjmp	.+26     	; 0xd22 <vfprintf+0x2d4>
 d08:	fe 01       	movw	r30, r28
 d0a:	ea 0d       	add	r30, r10
 d0c:	f1 1d       	adc	r31, r1
 d0e:	80 81       	ld	r24, Z
 d10:	80 33       	cpi	r24, 0x30	; 48
 d12:	11 f4       	brne	.+4      	; 0xd18 <vfprintf+0x2ca>
 d14:	39 7e       	andi	r19, 0xE9	; 233
 d16:	09 c0       	rjmp	.+18     	; 0xd2a <vfprintf+0x2dc>
 d18:	32 ff       	sbrs	r19, 2
 d1a:	06 c0       	rjmp	.+12     	; 0xd28 <vfprintf+0x2da>
 d1c:	b3 94       	inc	r11
 d1e:	b3 94       	inc	r11
 d20:	04 c0       	rjmp	.+8      	; 0xd2a <vfprintf+0x2dc>
 d22:	83 2f       	mov	r24, r19
 d24:	86 78       	andi	r24, 0x86	; 134
 d26:	09 f0       	breq	.+2      	; 0xd2a <vfprintf+0x2dc>
 d28:	b3 94       	inc	r11
 d2a:	33 fd       	sbrc	r19, 3
 d2c:	13 c0       	rjmp	.+38     	; 0xd54 <vfprintf+0x306>
 d2e:	30 ff       	sbrs	r19, 0
 d30:	06 c0       	rjmp	.+12     	; 0xd3e <vfprintf+0x2f0>
 d32:	5a 2c       	mov	r5, r10
 d34:	b3 14       	cp	r11, r3
 d36:	18 f4       	brcc	.+6      	; 0xd3e <vfprintf+0x2f0>
 d38:	53 0c       	add	r5, r3
 d3a:	5b 18       	sub	r5, r11
 d3c:	b3 2c       	mov	r11, r3
 d3e:	b3 14       	cp	r11, r3
 d40:	68 f4       	brcc	.+26     	; 0xd5c <vfprintf+0x30e>
 d42:	b7 01       	movw	r22, r14
 d44:	80 e2       	ldi	r24, 0x20	; 32
 d46:	90 e0       	ldi	r25, 0x00	; 0
 d48:	3c 87       	std	Y+12, r19	; 0x0c
 d4a:	0e 94 0f 07 	call	0xe1e	; 0xe1e <fputc>
 d4e:	b3 94       	inc	r11
 d50:	3c 85       	ldd	r19, Y+12	; 0x0c
 d52:	f5 cf       	rjmp	.-22     	; 0xd3e <vfprintf+0x2f0>
 d54:	b3 14       	cp	r11, r3
 d56:	10 f4       	brcc	.+4      	; 0xd5c <vfprintf+0x30e>
 d58:	3b 18       	sub	r3, r11
 d5a:	01 c0       	rjmp	.+2      	; 0xd5e <vfprintf+0x310>
 d5c:	31 2c       	mov	r3, r1
 d5e:	34 ff       	sbrs	r19, 4
 d60:	12 c0       	rjmp	.+36     	; 0xd86 <vfprintf+0x338>
 d62:	b7 01       	movw	r22, r14
 d64:	80 e3       	ldi	r24, 0x30	; 48
 d66:	90 e0       	ldi	r25, 0x00	; 0
 d68:	3c 87       	std	Y+12, r19	; 0x0c
 d6a:	0e 94 0f 07 	call	0xe1e	; 0xe1e <fputc>
 d6e:	3c 85       	ldd	r19, Y+12	; 0x0c
 d70:	32 ff       	sbrs	r19, 2
 d72:	17 c0       	rjmp	.+46     	; 0xda2 <vfprintf+0x354>
 d74:	31 fd       	sbrc	r19, 1
 d76:	03 c0       	rjmp	.+6      	; 0xd7e <vfprintf+0x330>
 d78:	88 e7       	ldi	r24, 0x78	; 120
 d7a:	90 e0       	ldi	r25, 0x00	; 0
 d7c:	02 c0       	rjmp	.+4      	; 0xd82 <vfprintf+0x334>
 d7e:	88 e5       	ldi	r24, 0x58	; 88
 d80:	90 e0       	ldi	r25, 0x00	; 0
 d82:	b7 01       	movw	r22, r14
 d84:	0c c0       	rjmp	.+24     	; 0xd9e <vfprintf+0x350>
 d86:	83 2f       	mov	r24, r19
 d88:	86 78       	andi	r24, 0x86	; 134
 d8a:	59 f0       	breq	.+22     	; 0xda2 <vfprintf+0x354>
 d8c:	31 ff       	sbrs	r19, 1
 d8e:	02 c0       	rjmp	.+4      	; 0xd94 <vfprintf+0x346>
 d90:	8b e2       	ldi	r24, 0x2B	; 43
 d92:	01 c0       	rjmp	.+2      	; 0xd96 <vfprintf+0x348>
 d94:	80 e2       	ldi	r24, 0x20	; 32
 d96:	37 fd       	sbrc	r19, 7
 d98:	8d e2       	ldi	r24, 0x2D	; 45
 d9a:	b7 01       	movw	r22, r14
 d9c:	90 e0       	ldi	r25, 0x00	; 0
 d9e:	0e 94 0f 07 	call	0xe1e	; 0xe1e <fputc>
 da2:	a5 14       	cp	r10, r5
 da4:	38 f4       	brcc	.+14     	; 0xdb4 <vfprintf+0x366>
 da6:	b7 01       	movw	r22, r14
 da8:	80 e3       	ldi	r24, 0x30	; 48
 daa:	90 e0       	ldi	r25, 0x00	; 0
 dac:	0e 94 0f 07 	call	0xe1e	; 0xe1e <fputc>
 db0:	5a 94       	dec	r5
 db2:	f7 cf       	rjmp	.-18     	; 0xda2 <vfprintf+0x354>
 db4:	aa 94       	dec	r10
 db6:	f4 01       	movw	r30, r8
 db8:	ea 0d       	add	r30, r10
 dba:	f1 1d       	adc	r31, r1
 dbc:	80 81       	ld	r24, Z
 dbe:	b7 01       	movw	r22, r14
 dc0:	90 e0       	ldi	r25, 0x00	; 0
 dc2:	0e 94 0f 07 	call	0xe1e	; 0xe1e <fputc>
 dc6:	a1 10       	cpse	r10, r1
 dc8:	f5 cf       	rjmp	.-22     	; 0xdb4 <vfprintf+0x366>
 dca:	33 20       	and	r3, r3
 dcc:	09 f4       	brne	.+2      	; 0xdd0 <vfprintf+0x382>
 dce:	51 ce       	rjmp	.-862    	; 0xa72 <vfprintf+0x24>
 dd0:	b7 01       	movw	r22, r14
 dd2:	80 e2       	ldi	r24, 0x20	; 32
 dd4:	90 e0       	ldi	r25, 0x00	; 0
 dd6:	0e 94 0f 07 	call	0xe1e	; 0xe1e <fputc>
 dda:	3a 94       	dec	r3
 ddc:	f6 cf       	rjmp	.-20     	; 0xdca <vfprintf+0x37c>
 dde:	f7 01       	movw	r30, r14
 de0:	86 81       	ldd	r24, Z+6	; 0x06
 de2:	97 81       	ldd	r25, Z+7	; 0x07
 de4:	02 c0       	rjmp	.+4      	; 0xdea <vfprintf+0x39c>
 de6:	8f ef       	ldi	r24, 0xFF	; 255
 de8:	9f ef       	ldi	r25, 0xFF	; 255
 dea:	2c 96       	adiw	r28, 0x0c	; 12
 dec:	e2 e1       	ldi	r30, 0x12	; 18
 dee:	0c 94 c1 07 	jmp	0xf82	; 0xf82 <__epilogue_restores__>

00000df2 <strnlen_P>:
 df2:	fc 01       	movw	r30, r24
 df4:	05 90       	lpm	r0, Z+
 df6:	61 50       	subi	r22, 0x01	; 1
 df8:	70 40       	sbci	r23, 0x00	; 0
 dfa:	01 10       	cpse	r0, r1
 dfc:	d8 f7       	brcc	.-10     	; 0xdf4 <strnlen_P+0x2>
 dfe:	80 95       	com	r24
 e00:	90 95       	com	r25
 e02:	8e 0f       	add	r24, r30
 e04:	9f 1f       	adc	r25, r31
 e06:	08 95       	ret

00000e08 <strnlen>:
 e08:	fc 01       	movw	r30, r24
 e0a:	61 50       	subi	r22, 0x01	; 1
 e0c:	70 40       	sbci	r23, 0x00	; 0
 e0e:	01 90       	ld	r0, Z+
 e10:	01 10       	cpse	r0, r1
 e12:	d8 f7       	brcc	.-10     	; 0xe0a <strnlen+0x2>
 e14:	80 95       	com	r24
 e16:	90 95       	com	r25
 e18:	8e 0f       	add	r24, r30
 e1a:	9f 1f       	adc	r25, r31
 e1c:	08 95       	ret

00000e1e <fputc>:
 e1e:	0f 93       	push	r16
 e20:	1f 93       	push	r17
 e22:	cf 93       	push	r28
 e24:	df 93       	push	r29
 e26:	fb 01       	movw	r30, r22
 e28:	23 81       	ldd	r18, Z+3	; 0x03
 e2a:	21 fd       	sbrc	r18, 1
 e2c:	03 c0       	rjmp	.+6      	; 0xe34 <fputc+0x16>
 e2e:	8f ef       	ldi	r24, 0xFF	; 255
 e30:	9f ef       	ldi	r25, 0xFF	; 255
 e32:	28 c0       	rjmp	.+80     	; 0xe84 <fputc+0x66>
 e34:	22 ff       	sbrs	r18, 2
 e36:	16 c0       	rjmp	.+44     	; 0xe64 <fputc+0x46>
 e38:	46 81       	ldd	r20, Z+6	; 0x06
 e3a:	57 81       	ldd	r21, Z+7	; 0x07
 e3c:	24 81       	ldd	r18, Z+4	; 0x04
 e3e:	35 81       	ldd	r19, Z+5	; 0x05
 e40:	42 17       	cp	r20, r18
 e42:	53 07       	cpc	r21, r19
 e44:	44 f4       	brge	.+16     	; 0xe56 <fputc+0x38>
 e46:	a0 81       	ld	r26, Z
 e48:	b1 81       	ldd	r27, Z+1	; 0x01
 e4a:	9d 01       	movw	r18, r26
 e4c:	2f 5f       	subi	r18, 0xFF	; 255
 e4e:	3f 4f       	sbci	r19, 0xFF	; 255
 e50:	31 83       	std	Z+1, r19	; 0x01
 e52:	20 83       	st	Z, r18
 e54:	8c 93       	st	X, r24
 e56:	26 81       	ldd	r18, Z+6	; 0x06
 e58:	37 81       	ldd	r19, Z+7	; 0x07
 e5a:	2f 5f       	subi	r18, 0xFF	; 255
 e5c:	3f 4f       	sbci	r19, 0xFF	; 255
 e5e:	37 83       	std	Z+7, r19	; 0x07
 e60:	26 83       	std	Z+6, r18	; 0x06
 e62:	10 c0       	rjmp	.+32     	; 0xe84 <fputc+0x66>
 e64:	eb 01       	movw	r28, r22
 e66:	09 2f       	mov	r16, r25
 e68:	18 2f       	mov	r17, r24
 e6a:	00 84       	ldd	r0, Z+8	; 0x08
 e6c:	f1 85       	ldd	r31, Z+9	; 0x09
 e6e:	e0 2d       	mov	r30, r0
 e70:	09 95       	icall
 e72:	89 2b       	or	r24, r25
 e74:	e1 f6       	brne	.-72     	; 0xe2e <fputc+0x10>
 e76:	8e 81       	ldd	r24, Y+6	; 0x06
 e78:	9f 81       	ldd	r25, Y+7	; 0x07
 e7a:	01 96       	adiw	r24, 0x01	; 1
 e7c:	9f 83       	std	Y+7, r25	; 0x07
 e7e:	8e 83       	std	Y+6, r24	; 0x06
 e80:	81 2f       	mov	r24, r17
 e82:	90 2f       	mov	r25, r16
 e84:	df 91       	pop	r29
 e86:	cf 91       	pop	r28
 e88:	1f 91       	pop	r17
 e8a:	0f 91       	pop	r16
 e8c:	08 95       	ret

00000e8e <__ultoa_invert>:
 e8e:	fa 01       	movw	r30, r20
 e90:	aa 27       	eor	r26, r26
 e92:	28 30       	cpi	r18, 0x08	; 8
 e94:	51 f1       	breq	.+84     	; 0xeea <__ultoa_invert+0x5c>
 e96:	20 31       	cpi	r18, 0x10	; 16
 e98:	81 f1       	breq	.+96     	; 0xefa <__ultoa_invert+0x6c>
 e9a:	e8 94       	clt
 e9c:	6f 93       	push	r22
 e9e:	6e 7f       	andi	r22, 0xFE	; 254
 ea0:	6e 5f       	subi	r22, 0xFE	; 254
 ea2:	7f 4f       	sbci	r23, 0xFF	; 255
 ea4:	8f 4f       	sbci	r24, 0xFF	; 255
 ea6:	9f 4f       	sbci	r25, 0xFF	; 255
 ea8:	af 4f       	sbci	r26, 0xFF	; 255
 eaa:	b1 e0       	ldi	r27, 0x01	; 1
 eac:	3e d0       	rcall	.+124    	; 0xf2a <__ultoa_invert+0x9c>
 eae:	b4 e0       	ldi	r27, 0x04	; 4
 eb0:	3c d0       	rcall	.+120    	; 0xf2a <__ultoa_invert+0x9c>
 eb2:	67 0f       	add	r22, r23
 eb4:	78 1f       	adc	r23, r24
 eb6:	89 1f       	adc	r24, r25
 eb8:	9a 1f       	adc	r25, r26
 eba:	a1 1d       	adc	r26, r1
 ebc:	68 0f       	add	r22, r24
 ebe:	79 1f       	adc	r23, r25
 ec0:	8a 1f       	adc	r24, r26
 ec2:	91 1d       	adc	r25, r1
 ec4:	a1 1d       	adc	r26, r1
 ec6:	6a 0f       	add	r22, r26
 ec8:	71 1d       	adc	r23, r1
 eca:	81 1d       	adc	r24, r1
 ecc:	91 1d       	adc	r25, r1
 ece:	a1 1d       	adc	r26, r1
 ed0:	20 d0       	rcall	.+64     	; 0xf12 <__ultoa_invert+0x84>
 ed2:	09 f4       	brne	.+2      	; 0xed6 <__ultoa_invert+0x48>
 ed4:	68 94       	set
 ed6:	3f 91       	pop	r19
 ed8:	2a e0       	ldi	r18, 0x0A	; 10
 eda:	26 9f       	mul	r18, r22
 edc:	11 24       	eor	r1, r1
 ede:	30 19       	sub	r19, r0
 ee0:	30 5d       	subi	r19, 0xD0	; 208
 ee2:	31 93       	st	Z+, r19
 ee4:	de f6       	brtc	.-74     	; 0xe9c <__ultoa_invert+0xe>
 ee6:	cf 01       	movw	r24, r30
 ee8:	08 95       	ret
 eea:	46 2f       	mov	r20, r22
 eec:	47 70       	andi	r20, 0x07	; 7
 eee:	40 5d       	subi	r20, 0xD0	; 208
 ef0:	41 93       	st	Z+, r20
 ef2:	b3 e0       	ldi	r27, 0x03	; 3
 ef4:	0f d0       	rcall	.+30     	; 0xf14 <__ultoa_invert+0x86>
 ef6:	c9 f7       	brne	.-14     	; 0xeea <__ultoa_invert+0x5c>
 ef8:	f6 cf       	rjmp	.-20     	; 0xee6 <__ultoa_invert+0x58>
 efa:	46 2f       	mov	r20, r22
 efc:	4f 70       	andi	r20, 0x0F	; 15
 efe:	40 5d       	subi	r20, 0xD0	; 208
 f00:	4a 33       	cpi	r20, 0x3A	; 58
 f02:	18 f0       	brcs	.+6      	; 0xf0a <__ultoa_invert+0x7c>
 f04:	49 5d       	subi	r20, 0xD9	; 217
 f06:	31 fd       	sbrc	r19, 1
 f08:	40 52       	subi	r20, 0x20	; 32
 f0a:	41 93       	st	Z+, r20
 f0c:	02 d0       	rcall	.+4      	; 0xf12 <__ultoa_invert+0x84>
 f0e:	a9 f7       	brne	.-22     	; 0xefa <__ultoa_invert+0x6c>
 f10:	ea cf       	rjmp	.-44     	; 0xee6 <__ultoa_invert+0x58>
 f12:	b4 e0       	ldi	r27, 0x04	; 4
 f14:	a6 95       	lsr	r26
 f16:	97 95       	ror	r25
 f18:	87 95       	ror	r24
 f1a:	77 95       	ror	r23
 f1c:	67 95       	ror	r22
 f1e:	ba 95       	dec	r27
 f20:	c9 f7       	brne	.-14     	; 0xf14 <__ultoa_invert+0x86>
 f22:	00 97       	sbiw	r24, 0x00	; 0
 f24:	61 05       	cpc	r22, r1
 f26:	71 05       	cpc	r23, r1
 f28:	08 95       	ret
 f2a:	9b 01       	movw	r18, r22
 f2c:	ac 01       	movw	r20, r24
 f2e:	0a 2e       	mov	r0, r26
 f30:	06 94       	lsr	r0
 f32:	57 95       	ror	r21
 f34:	47 95       	ror	r20
 f36:	37 95       	ror	r19
 f38:	27 95       	ror	r18
 f3a:	ba 95       	dec	r27
 f3c:	c9 f7       	brne	.-14     	; 0xf30 <__ultoa_invert+0xa2>
 f3e:	62 0f       	add	r22, r18
 f40:	73 1f       	adc	r23, r19
 f42:	84 1f       	adc	r24, r20
 f44:	95 1f       	adc	r25, r21
 f46:	a0 1d       	adc	r26, r0
 f48:	08 95       	ret

00000f4a <__prologue_saves__>:
 f4a:	2f 92       	push	r2
 f4c:	3f 92       	push	r3
 f4e:	4f 92       	push	r4
 f50:	5f 92       	push	r5
 f52:	6f 92       	push	r6
 f54:	7f 92       	push	r7
 f56:	8f 92       	push	r8
 f58:	9f 92       	push	r9
 f5a:	af 92       	push	r10
 f5c:	bf 92       	push	r11
 f5e:	cf 92       	push	r12
 f60:	df 92       	push	r13
 f62:	ef 92       	push	r14
 f64:	ff 92       	push	r15
 f66:	0f 93       	push	r16
 f68:	1f 93       	push	r17
 f6a:	cf 93       	push	r28
 f6c:	df 93       	push	r29
 f6e:	cd b7       	in	r28, 0x3d	; 61
 f70:	de b7       	in	r29, 0x3e	; 62
 f72:	ca 1b       	sub	r28, r26
 f74:	db 0b       	sbc	r29, r27
 f76:	0f b6       	in	r0, 0x3f	; 63
 f78:	f8 94       	cli
 f7a:	de bf       	out	0x3e, r29	; 62
 f7c:	0f be       	out	0x3f, r0	; 63
 f7e:	cd bf       	out	0x3d, r28	; 61
 f80:	09 94       	ijmp

00000f82 <__epilogue_restores__>:
 f82:	2a 88       	ldd	r2, Y+18	; 0x12
 f84:	39 88       	ldd	r3, Y+17	; 0x11
 f86:	48 88       	ldd	r4, Y+16	; 0x10
 f88:	5f 84       	ldd	r5, Y+15	; 0x0f
 f8a:	6e 84       	ldd	r6, Y+14	; 0x0e
 f8c:	7d 84       	ldd	r7, Y+13	; 0x0d
 f8e:	8c 84       	ldd	r8, Y+12	; 0x0c
 f90:	9b 84       	ldd	r9, Y+11	; 0x0b
 f92:	aa 84       	ldd	r10, Y+10	; 0x0a
 f94:	b9 84       	ldd	r11, Y+9	; 0x09
 f96:	c8 84       	ldd	r12, Y+8	; 0x08
 f98:	df 80       	ldd	r13, Y+7	; 0x07
 f9a:	ee 80       	ldd	r14, Y+6	; 0x06
 f9c:	fd 80       	ldd	r15, Y+5	; 0x05
 f9e:	0c 81       	ldd	r16, Y+4	; 0x04
 fa0:	1b 81       	ldd	r17, Y+3	; 0x03
 fa2:	aa 81       	ldd	r26, Y+2	; 0x02
 fa4:	b9 81       	ldd	r27, Y+1	; 0x01
 fa6:	ce 0f       	add	r28, r30
 fa8:	d1 1d       	adc	r29, r1
 faa:	0f b6       	in	r0, 0x3f	; 63
 fac:	f8 94       	cli
 fae:	de bf       	out	0x3e, r29	; 62
 fb0:	0f be       	out	0x3f, r0	; 63
 fb2:	cd bf       	out	0x3d, r28	; 61
 fb4:	ed 01       	movw	r28, r26
 fb6:	08 95       	ret

00000fb8 <_exit>:
 fb8:	f8 94       	cli

00000fba <__stop_program>:
 fba:	ff cf       	rjmp	.-2      	; 0xfba <__stop_program>
