
Task_3_C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000166  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000112  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000166  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000198  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000000de  00000000  00000000  00000200  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000098  00000000  00000000  000002de  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000000c4  00000000  00000000  00000376  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  0000043c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000016a  00000000  00000000  00000470  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000055  00000000  00000000  000005da  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  0000062f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 57 00 	call	0xae	; 0xae <main>
  78:	0c 94 87 00 	jmp	0x10e	; 0x10e <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <delay>:
	return 0;
}

char delay(char a)
{
	TCNT1 = 3035;
  80:	2b ed       	ldi	r18, 0xDB	; 219
  82:	3b e0       	ldi	r19, 0x0B	; 11
  84:	30 93 85 00 	sts	0x0085, r19
  88:	20 93 84 00 	sts	0x0084, r18
	TCCR1A = 0;
  8c:	10 92 80 00 	sts	0x0080, r1
	TCCR1B |= (1<<CS10)|(1<<CS11);
  90:	e1 e8       	ldi	r30, 0x81	; 129
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	90 81       	ld	r25, Z
  96:	93 60       	ori	r25, 0x03	; 3
  98:	90 83       	st	Z, r25
	while((TIFR1 &= 1<<TOV1) != 1);
  9a:	96 b3       	in	r25, 0x16	; 22
  9c:	91 70       	andi	r25, 0x01	; 1
  9e:	96 bb       	out	0x16, r25	; 22
  a0:	91 30       	cpi	r25, 0x01	; 1
  a2:	d9 f7       	brne	.-10     	; 0x9a <delay+0x1a>
	TCCR1B = 0;
  a4:	10 92 81 00 	sts	0x0081, r1
	TIFR1 |= (1<<TOV1);
  a8:	b0 9a       	sbi	0x16, 0	; 22
	a++;
	return a;
}
  aa:	8f 5f       	subi	r24, 0xFF	; 255
  ac:	08 95       	ret

000000ae <main>:

char delay(char);

int main(void)
{
	DDRB = 0xFF;
  ae:	8f ef       	ldi	r24, 0xFF	; 255
  b0:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xFF;
  b2:	87 b9       	out	0x07, r24	; 7
	DDRD |= (1<<5) | (1<<6);
  b4:	8a b1       	in	r24, 0x0a	; 10
  b6:	80 66       	ori	r24, 0x60	; 96
  b8:	8a b9       	out	0x0a, r24	; 10
	char count = 0;
  ba:	80 e0       	ldi	r24, 0x00	; 0
	while(1)
	{
		count = delay(count);
		PORTB = count;
		PORTC = count >> 2;
		if(count%5 == 0)
  bc:	cd ec       	ldi	r28, 0xCD	; 205
			PORTD ^= (1<<5);
  be:	10 e2       	ldi	r17, 0x20	; 32
		if(count%10 == 0)
			PORTD ^= (1<<6);
  c0:	d0 e4       	ldi	r29, 0x40	; 64
	DDRC = 0xFF;
	DDRD |= (1<<5) | (1<<6);
	char count = 0;
	while(1)
	{
		count = delay(count);
  c2:	0e 94 40 00 	call	0x80	; 0x80 <delay>
		PORTB = count;
  c6:	85 b9       	out	0x05, r24	; 5
		PORTC = count >> 2;
  c8:	98 2f       	mov	r25, r24
  ca:	96 95       	lsr	r25
  cc:	96 95       	lsr	r25
  ce:	98 b9       	out	0x08, r25	; 8
		if(count%5 == 0)
  d0:	8c 9f       	mul	r24, r28
  d2:	91 2d       	mov	r25, r1
  d4:	11 24       	eor	r1, r1
  d6:	96 95       	lsr	r25
  d8:	96 95       	lsr	r25
  da:	29 2f       	mov	r18, r25
  dc:	22 0f       	add	r18, r18
  de:	22 0f       	add	r18, r18
  e0:	92 0f       	add	r25, r18
  e2:	89 13       	cpse	r24, r25
  e4:	03 c0       	rjmp	.+6      	; 0xec <main+0x3e>
			PORTD ^= (1<<5);
  e6:	9b b1       	in	r25, 0x0b	; 11
  e8:	91 27       	eor	r25, r17
  ea:	9b b9       	out	0x0b, r25	; 11
		if(count%10 == 0)
  ec:	8c 9f       	mul	r24, r28
  ee:	91 2d       	mov	r25, r1
  f0:	11 24       	eor	r1, r1
  f2:	96 95       	lsr	r25
  f4:	96 95       	lsr	r25
  f6:	96 95       	lsr	r25
  f8:	99 0f       	add	r25, r25
  fa:	29 2f       	mov	r18, r25
  fc:	22 0f       	add	r18, r18
  fe:	22 0f       	add	r18, r18
 100:	92 0f       	add	r25, r18
 102:	89 13       	cpse	r24, r25
 104:	de cf       	rjmp	.-68     	; 0xc2 <main+0x14>
			PORTD ^= (1<<6);
 106:	9b b1       	in	r25, 0x0b	; 11
 108:	9d 27       	eor	r25, r29
 10a:	9b b9       	out	0x0b, r25	; 11
 10c:	da cf       	rjmp	.-76     	; 0xc2 <main+0x14>

0000010e <_exit>:
 10e:	f8 94       	cli

00000110 <__stop_program>:
 110:	ff cf       	rjmp	.-2      	; 0x110 <__stop_program>
